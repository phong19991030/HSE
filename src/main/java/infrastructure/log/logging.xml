<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="log.logging">
	
	
	<!-- 로그인 정보 로깅  -->
	<insert id="insert_sys_login_log" parameterType="map"  >
		
		INSERT INTO TSLG_LOGIN_STATE (
		   LOGIN_NO, USER_ID, DEPT_CD,
		   IP, LOGIN_DT, LOGOUT_DT, 
		   SESS_ID, ACCESS_POINT) 
		   (SELECT IFNULL(MAX (CONVERT(LOGIN_NO, SIGNED INTEGER)), 0)+1 LOGIN_NO,
		  #{USER_UID},
		  #{DEPT_CD},
		  #{IP},
		  sysdate(),
		  #{LOGOUT_DT},
		  #{SESS_ID},
		  #{ACCESS_POINT}
		  FROM	TSLG_LOGIN_STATE)
		<selectKey resultType="int" keyProperty="LOGIN_NO" order="AFTER">
			SELECT	IFNULL(MAX (CONVERT(LOGIN_NO, SIGNED INTEGER)), 0) LOGIN_NO
			  FROM	TSLG_LOGIN_STATE
		</selectKey>
	</insert>
	
	<!-- 로그인 정보 로깅  -->
	<update id="end_session" parameterType="map"  >
		
		UPDATE TSLG_LOGIN_STATE
		SET    
		       LOGOUT_DT = sysdate()
		WHERE  LOGIN_NO  = #{LOGIN_NO, 			jdbcType=VARCHAR}
		AND    USER_ID   = #{USER_UID, 			jdbcType=VARCHAR}
	</update>
	<update id="update_sys_login_log" parameterType="map"  >
		
		UPDATE TSLG_LOGIN_STATE
		SET    LOGIN_NO  = #{LOGIN_NO, 			jdbcType=VARCHAR},
		       USER_ID   = #{USER_UID, 			jdbcType=VARCHAR},
		       DEPT_CD   = #{DEPT_CD, 			jdbcType=VARCHAR},
		       IP        = #{IP, 			jdbcType=VARCHAR},
		       LOGIN_DT  = #{LOGIN_DT, 			jdbcType=VARCHAR},
		       LOGOUT_DT = #{LOGOUT_DT, 			jdbcType=VARCHAR},
		       SESS_ID   = #{SESS_ID, 			jdbcType=VARCHAR}
		WHERE  LOGIN_NO  = #{LOGIN_NO, 			jdbcType=VARCHAR}
		AND    USER_ID   = #{USER_UID, 			jdbcType=VARCHAR}
	</update>
	<!-- 로그인 정보 로깅  -->
	<update id="update_sys_login_log_logout_Time" parameterType="map"  >
		
		UPDATE TSLG_LOGIN_STATE
		SET    
		       LOGOUT_DT =  sysdate()
		WHERE  LOGIN_NO  = #{LOGIN_NO, 			jdbcType=VARCHAR}
		AND    USER_ID   = #{USER_UID, 			jdbcType=VARCHAR}
	</update>
	
<!-- 	update logout session > 1 day -->
	<update id="removeSession" parameterType="map"  >
		
		UPDATE TSLG_LOGIN_STATE
		SET    
		       LOGOUT_DT =  sysdate()
		WHERE DATEDIFF(sysdate(), LOGIN_DT) > 1
		
	</update>
		
	
	
	<!-- 메뉴접속 정보 로깅  -->
	<insert id="insert_log_access_menu_log" parameterType="map" >
		INSERT INTO TSLG_MENU_ACCESS_STATE   (
		   MENU_ACCESS_ID, USER_ID, MENU_ACCESS_TIME, 
		   MENU_ID,
		   MENU_NM,
		   PGM_ID
		   ) 
		VALUES ( 
			(SELECT	IFNULL(MAX (CAST(MENU_ACCESS_ID AS INT)), 0)+1 LOGIN_NO
			FROM	TSLG_MENU_ACCESS_STATE  ) ,
			#{USER_UID, jdbcType=VARCHAR},
			sysdate(),
			(
			select MENU_ID from (
			select MENU_ID FROM TSST_MENU_MGT where PGM_ID = #{PGM_ID, jdbcType=VARCHAR}
			)where rn =1),
			(
			select MENU_NM from (
			select MENU_NM FROM TSST_MENU_MGT where PGM_ID = #{PGM_ID, jdbcType=VARCHAR}
			)where rn =1),
			#{PGM_ID, jdbcType=VARCHAR}
		 )
	</insert>
	
	<!-- 메뉴접속 정보 로깅  -->
	<insert id="insert_sys_error_log" parameterType="map" >
		INSERT INTO TSLG_SYS_ERROR_STATE (
		   SYS_ERROR_ID, USER_ID, SYS_ERROR_TIME, 
		   MENU_ID,
		   MENU_NM,
		   PGM_ID,
		   ERR_LOG
		   ) 
		VALUES ( 
			(SELECT	IFNULL(MAX (CAST(SYS_ERROR_ID AS INT)), 0)+1 LOGIN_NO
			FROM	TSLG_SYS_ERROR_STATE) ,
			#{USER_UID, jdbcType=VARCHAR},
			sysdate(),
			(
			select MENU_ID from (
			select MENU_ID FROM TSST_MENU_MGT where PGM_ID = #{PGM_ID, jdbcType=VARCHAR}
			) A where A.rn = 1),
			(
			select MENU_NM from (
			select MENU_NM FROM TSST_MENU_MGT where PGM_ID = #{PGM_ID, jdbcType=VARCHAR}
			) B where B.rn =1),
			#{PGM_ID, jdbcType=VARCHAR},
			#{ERR_LOG, jdbcType=VARCHAR}
		 )
	</insert>
	
	
	
	<insert id="insert_log_access_menu" parameterType="map" >
		<selectKey keyProperty="LOG_ID" resultType="string" order="AFTER">
			SELECT @result
		</selectKey>
		BEGIN NOT ATOMIC
			DECLARE result VARCHAR(20);
			CALL proc_gen_id('LOG_ACCESS_SEQ', @result);
		
			INSERT INTO TSLG_MENU_ACCESS(LOG_ID, USER_ID, IP, TIMESTAMP, EVENT, MENU, ACCESS_POINT) 
			VALUES 
			(
			@result,
			#{USER_ID},
			#{CLIENT_IP},
			NOW(),
			#{VIEW},
			#{MENU_NM_ENG},
			#{DEVICE_TYPE}
			);
		END; 
		

	</insert>
	
	
	<select id="getMenuByPathId" parameterType="map" resultType="HashMap">
		SELECT 
            M.MENU_ID,
            M.UP_MENU_ID,
            M.MENU_NM,
            M.MENU_NM_ENG,
            <!-- M.PGM_ID, -->
            <!-- P.PGM_NM, -->
            M.PARAM,
            M.IMG_PATH,
            M.IMG_OVER_PATH,
            M.LEFT_IMG_PATH,   
            M.WDT_SZ,                
            M.HGT_SZ,
            M.USE_YN,
            M.ORD_NO,
            <!-- 			LEV, -->
        	CONVERT(LEV, CHAR)  LEV,
            M.CLS_CD,
            M.MENU_TP,
            M.RMK,
            M.MENU_OUT_YN,
            M.INS_ID,
            <!-- TO_CHAR(INS_DT, 'YYYY-MM-DD') AS INS_DT, -->
            M.INS_DT,
            M.UPT_ID,
            <!-- TO_CHAR(UPT_DT, 'YYYY-MM-DD') AS UPT_DT -->
            M.UPT_DT,
            LINK_PATH
		FROM TSST_MENU_MGT M
		<!-- LEFT JOIN TSST_PGM_MGT P ON P.PGM_ID = M.PGM_ID -->
		WHERE LINK_PATH LIKE CONCAT('%',#{PATH_ID}, '%')
		LIMIT 1;
	</select>
	
</mapper>