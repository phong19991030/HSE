<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="safety.safety_0300">

<select id="getAccidentList" parameterType="map" resultType="HashMap">
		SELECT SUB.*
		FROM (
			SELECT
			HAM.ACCIDENT_ID,
			HAM.DOC_NO,
			HAM.REPORT_TYPE,
			CD.COMM_NM AS REPORT_TYPE_NM,
			HAM.ACCIDENT_NAME,
			HAM.INS_USER,
			HAM.INS_DATE,
			HAM.UPD_USER,
			HAM.UPD_DATE,
			HAM.NAME_OF_INJURED,
			DATE_FORMAT(CONVERT_TZ(HAM.ACCIDENT_DATE, @@session.time_zone,#{session.CLIENT_TIMEZONE_OFFSET}), '%Y.%m.%d') AS ACCIDENT_DATE,
			DATE_FORMAT(CONVERT_TZ(HAM.ACCIDENT_DATE, @@session.time_zone, #{session.CLIENT_TIMEZONE_OFFSET}), '%H:%i') AS ACCIDENT_DATE_TIME,
			HAM.PLACE,
			HAM.PLACE_DETAIL,
			HAM.INJURED_AREA,
			HAM.ACCIDENT_DETAIL,
			HAM.ACTION,
			HAM.PREVENTION_PLAN,
			HAM.EMP_NO_INVOLVE,
			HAM.EMP_NO_INJURED,
			HAM.NO_INJURED,
			HAM.OTHER_PEOPLE_INJURED,
			HPM.PROJECT_NAME,
			ROW_NUMBER() OVER (ORDER BY HAM.INS_DATE DESC ) AS RN
			FROM
			HSE_ACCIDENT_MGT HAM
			INNER JOIN TSST_USER_INFO TUI ON TUI.USER_UID= HAM.INS_USER
			LEFT JOIN HSE_PROJECT_MGT HPM ON HAM.PROJECT_ID = HPM.PROJECT_ID
			LEFT JOIN COMM_CD CD ON HAM.REPORT_TYPE = CD.COMM_CD

			<where>
				<if test="all != null and all != '' ">
			    		AND (
						    LOWER(CD.COMM_NM) LIKE LOWER(CONCAT('%', #{all}, '%')) OR
						    LOWER(HAM.ACCIDENT_NAME) LIKE LOWER(CONCAT('%', #{all}, '%')) OR
						    LOWER(HPM.PROJECT_NAME) LIKE LOWER(CONCAT('%', #{all}, '%')) OR
						    LOWER(HAM.PLACE) LIKE LOWER(CONCAT('%', #{all}, '%')) OR
						    LOWER(HAM.PLACE_DETAIL) LIKE LOWER(CONCAT('%', #{all}, '%')) 
						)
			    	</if>
				<if test="REPORT_TYPE != null and REPORT_TYPE != '' ">
					AND HAM.REPORT_TYPE LIKE CONCAT('%',#{REPORT_TYPE},'%')
				</if>
				<if test="SEARCH_FIRST_DT != null and SEARCH_FIRST_DT != '' ">
		    		AND HAM.ACCIDENT_DATE &gt;= #{SEARCH_FIRST_DT}
		    	</if>
	    	<if test="SEARCH_LAST_DT != null and SEARCH_LAST_DT != '' ">
	    		AND HAM.ACCIDENT_DATE &lt;= #{SEARCH_LAST_DT}
	    	</if>
			</where>
		) SUB
		WHERE SUB.RN BETWEEN (#{PAGE}-1) * #{PAGE_SIZE}+1 and (#{PAGE} * #{PAGE_SIZE})
		ORDER BY SUB.RN ASC
	</select>

	<select id="getAccidentsByCompanyId" parameterType="map" resultType="HashMap">
			SELECT
			HAM.ACCIDENT_ID,
			HAM.DOC_NO,
			HAM.REPORT_TYPE,
			CD.COMM_NM AS REPORT_TYPE_NM,
			HAM.ACCIDENT_NAME,
			HAM.INS_USER,
			HAM.INS_DATE,
			HAM.UPD_USER,
			HAM.UPD_DATE,
			HAM.NAME_OF_INJURED,
			DATE_FORMAT(CONVERT_TZ(HAM.ACCIDENT_DATE, @@session.time_zone,#{session.CLIENT_TIMEZONE_OFFSET}), '%Y.%m.%d') AS ACCIDENT_DATE,
			DATE_FORMAT(CONVERT_TZ(HAM.ACCIDENT_DATE, @@session.time_zone, #{session.CLIENT_TIMEZONE_OFFSET}), '%H-%i') AS ACCIDENT_DATE_TIME,
			HAM.PLACE,
			HAM.PLACE_DETAIL,
			HAM.INJURED_AREA,
			HAM.ACCIDENT_DETAIL,
			HAM.ACTION,
			HAM.PREVENTION_PLAN,
			HAM.EMP_NO_INVOLVE,
			HAM.EMP_NO_INJURED,
			HAM.NO_INJURED,
			HAM.OTHER_PEOPLE_INJURED,
			HPM.PROJECT_NAME,
			HEM1.EMP_NAME AS EMP_NAME_OF_INJURED,
			HEM2.EMP_NAME AS EMP_NAME_INVOLVE,
			HEM3.EMP_NAME AS EMP_NAME_INJURED,
 			emp.EMP_NAME as FIRST_EMP_NAME_INVOLVE, 
			CHAR_LENGTH(HAM.EMP_NO_INVOLVE) - CHAR_LENGTH( REPLACE ( HAM.EMP_NO_INVOLVE, ',', '')) as CNT_INVOLVE_MORE, 
			ROW_NUMBER() OVER (ORDER BY HAM.INS_DATE DESC ) AS RN
			FROM
			HSE_ACCIDENT_MGT HAM
			INNER JOIN TSST_USER_INFO TUI ON TUI.USER_UID= HAM.INS_USER
			LEFT JOIN HSE_PROJECT_MGT HPM ON HAM.PROJECT_ID = HPM.PROJECT_ID
			LEFT JOIN HSE_EMP_MGT HEM1 ON HAM.NAME_OF_INJURED = HEM1.EMP_NO
			LEFT JOIN HSE_EMP_MGT HEM2 ON HAM.EMP_NO_INVOLVE = HEM2.EMP_NO
			LEFT JOIN HSE_EMP_MGT HEM3 ON HAM.EMP_NO_INJURED = HEM3.EMP_NO
			LEFT JOIN HSE_COMPANY_MGT hcm ON HPM.COMPANY_ID = hcm.COMPANY_ID
			LEFT JOIN COMM_CD CD ON HAM.REPORT_TYPE = CD.COMM_CD
			LEFT JOIN HSE_EMP_MGT emp ON SUBSTRING_INDEX(HAM.EMP_NO_INVOLVE,',',1) = emp.EMP_NO
			<where>
				hcm.COMPANY_ID = #{COMPANY_ID}
				AND ACCIDENT_DATE &gt;= #{START_DM} 
				AND ACCIDENT_DATE &lt;= #{END_DM}
			</where>
			ORDER BY HAM.REPORT_TYPE ASC
	</select>
	
	<select id="getCountAccidentsByCompanyIdNMonth" parameterType="map" resultType="HashMap">
		SELECT COUNT(*) as CNT,
		REPORT_TYPE, 
		DATE_FORMAT(ACCIDENT_DATE, '%d') as DAY_ACCIDENT 
		FROM HSE_ACCIDENT_MGT HAM
		LEFT JOIN HSE_PROJECT_MGT HPM ON HAM.PROJECT_ID = HPM.PROJECT_ID
		LEFT JOIN HSE_COMPANY_MGT hcm ON HPM.COMPANY_ID = hcm.COMPANY_ID
		WHERE ACCIDENT_DATE &gt;= #{START_DM} 
		AND ACCIDENT_DATE &lt;= #{END_DM}
		AND hcm.COMPANY_ID = #{COMPANY_ID}
		GROUP BY REPORT_TYPE, DATE_FORMAT(ACCIDENT_DATE, '%Y-%m-%d')
	</select>

	<select id="getAccidentCnt" parameterType="map" resultType="HashMap">
		SELECT COUNT(*) AS CNT
		FROM HSE_ACCIDENT_MGT HAM
		<where>
				<if test="all != null and all != '' ">
			    		AND (
						    LOWER(HAM.REPORT_TYPE) LIKE LOWER(CONCAT('%', #{all}, '%'))
						)
			    	</if>
				<if test="REPORT_TYPE != null and REPORT_TYPE != '' ">
					AND HAM.REPORT_TYPE LIKE CONCAT('%',#{REPORT_TYPE},'%')
				</if>
				<if test="SEARCH_FIRST_DT != null and SEARCH_FIRST_DT != '' ">
		    		AND HAM.ACCIDENT_DATE &gt;= #{SEARCH_FIRST_DT}
		    	</if>
	    	<if test="SEARCH_LAST_DT != null and SEARCH_LAST_DT != '' ">
	    		AND HAM.ACCIDENT_DATE &lt;= #{SEARCH_LAST_DT}
	    	</if>
			</where>
	</select>

	<select id="getAccidentById" parameterType="map" resultType="HashMap">
		SELECT 
		HAM.ACCIDENT_ID,
		HAM.DOC_NO,
		HAM.REPORT_TYPE,
		HAM.ACCIDENT_NAME,
		HAM.WRITER,
		hem.EMP_NAME as WRITER_NAME,
		HAM.NAME_OF_INJURED,
		DATE_FORMAT(CONVERT_TZ(HAM.ACCIDENT_DATE, @@session.time_zone, #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%d') AS ACCIDENT_DATE,
		DATE_FORMAT(CONVERT_TZ(HAM.ACCIDENT_DATE, @@session.time_zone, #{session.CLIENT_TIMEZONE_OFFSET}), '%H-%i') AS ACCIDENT_DATE_TIME,
		HAM.PLACE,
		HAM.PLACE_DETAIL,
		HAM.INJURED_AREA,
		HAM.ACCIDENT_DETAIL,
		HAM.ACTION,
		HAM.PREVENTION_PLAN,
		HAM.EMP_NO_INVOLVE,
		HAM.EMP_NO_INJURED,
		HAM.OTHER_PEOPLE_INJURED,
		HAM.NO_INJURED,
		HAM.PROJECT_ID,
		HAM.INS_DATE,
		HAM.INS_USER,
		HPM.PROJECT_NAME,
		HEM1.EMP_NAME AS EMP_NAME_OF_INJURED,
		HEM2.EMP_NAME AS EMP_NAME_INVOLVE,
		HEM3.EMP_NAME AS EMP_NAME_INJURED,
		CD.COMM_NM AS REPORT_TYPE_NM
		FROM HSE_ACCIDENT_MGT HAM
		LEFT JOIN HSE_PROJECT_MGT HPM ON HAM.PROJECT_ID = HPM.PROJECT_ID
		LEFT JOIN HSE_EMP_MGT HEM1 ON HAM.NAME_OF_INJURED = HEM1.EMP_NO
		LEFT JOIN HSE_EMP_MGT HEM2 ON HAM.EMP_NO_INVOLVE = HEM2.EMP_NO
		LEFT JOIN HSE_EMP_MGT HEM3 ON HAM.EMP_NO_INJURED = HEM3.EMP_NO
		LEFT JOIN HSE_EMP_MGT hem ON hem.EMP_NO = HAM.WRITER
		LEFT JOIN COMM_CD CD ON HAM.REPORT_TYPE = CD.COMM_CD
		WHERE HAM.ACCIDENT_ID = #{ACCIDENT_ID}
	</select>


	<insert id="insert" parameterType="map" useGeneratedKeys="true" keyProperty="ACCIDENT_ID">
		INSERT INTO HSE_ACCIDENT_MGT
		(
		DOC_NO,
		REPORT_TYPE,
		WRITER,
		NAME_OF_INJURED,
		ACCIDENT_DATE,
		PLACE,
		PLACE_DETAIL,
		INJURED_AREA,
		ACCIDENT_DETAIL,
		ACTION,
		PREVENTION_PLAN,
		EMP_NO_INVOLVE,
		EMP_NO_INJURED,
		OTHER_PEOPLE_INJURED,
		NO_INJURED,
		PROJECT_ID,
		ACCIDENT_NAME,

		INS_DATE,
		INS_USER
		)
		VALUES
		(
		#{DOC_NO},
		#{REPORT_TYPE},
		#{WRITER},
		#{NAME_OF_INJURED},
		#{ACCIDENT_DATE},
		#{PLACE},
		#{PLACE_DETAIL},
		#{INJURED_AREA},
		#{ACCIDENT_DETAIL},
		#{ACTION},
		#{PREVENTION_PLAN},
		#{EMP_NO_INVOLVE},
		#{EMP_NO_INJURED},
		#{OTHER_PEOPLE_INJURED},
		#{NO_INJURED},
		#{PROJECT_ID},
		#{ACCIDENT_NAME},

		CURRENT_TIMESTAMP(),
		#{session.USER_UID}
		)
	</insert>

	<update id="update" parameterType="map">
		UPDATE HSE_ACCIDENT_MGT HAM
		SET
		HAM.DOC_NO = #{DOC_NO},
		HAM.REPORT_TYPE = #{REPORT_TYPE},
		HAM.WRITER = #{WRITER},
		HAM.ACCIDENT_NAME = #{ACCIDENT_NAME},
		HAM.NAME_OF_INJURED = #{NAME_OF_INJURED}, 
		HAM.ACCIDENT_DATE = #{ACCIDENT_DATE}, 
		HAM.PLACE =#{PLACE}, 
		HAM.PLACE_DETAIL = #{PLACE_DETAIL}, 
		HAM.INJURED_AREA = #{INJURED_AREA}, 
		HAM.ACCIDENT_DETAIL = #{ACCIDENT_DETAIL}, 
		HAM.ACTION= #{ACTION}, 
		HAM.PREVENTION_PLAN = #{PREVENTION_PLAN},
		HAM.EMP_NO_INVOLVE = #{EMP_NO_INVOLVE}, 
		HAM.EMP_NO_INJURED = #{EMP_NO_INJURED}, 
		HAM.OTHER_PEOPLE_INJURED = #{OTHER_PEOPLE_INJURED},
		HAM.NO_INJURED = #{NO_INJURED},
		HAM.PROJECT_ID = #{PROJECT_ID}, 

		HAM.UPD_DATE = CURRENT_TIMESTAMP(), 
		HAM.UPD_USER =#{session.USER_UID}
		WHERE 
		HAM.ACCIDENT_ID =#{ACCIDENT_ID}
	</update>

	<delete id="delete" parameterType="map">
	BEGIN NOT ATOMIC
		DELETE FROM HSE_ACCIDENT_MGT_FILE
		WHERE ACCIDENT_ID = #{ACCIDENT_ID};
		
		DELETE FROM HSE_ACCIDENT_MGT
		WHERE ACCIDENT_ID = #{ACCIDENT_ID};
		
	END;
	</delete>
	
	<select id="getAccidentFiles" parameterType="map" resultType="HashMap">
		SELECT 
		tf.ACCIDENT_FILE_ID,
		tf.ACCIDENT_ID,
		tf.FILE_TYPE,
		tf.FILE_ID,
		file.FLE_PATH,
		DATE_FORMAT(CONVERT_TZ(file.INS_DT, @@session.time_zone,  #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%d') as FILE_INS_DATE,
		file.FLE_SZ,
		file.FLE_NM
        FROM HSE_ACCIDENT_MGT_FILE tf
        LEFT JOIN TCCO_FILE file ON file.ATCH_FLE_SEQ = tf.FILE_ID
        WHERE tf.ACCIDENT_ID = #{ACCIDENT_ID};
	</select>
	
	<insert id="insertAccidentFile" parameterType="map" useGeneratedKeys="true" keyProperty="ACCIDENT_FILE_ID">
		INSERT INTO HSE_ACCIDENT_MGT_FILE
		(
		    ACCIDENT_ID,
		    FILE_TYPE,
		    FILE_ID,
		    INS_DATE,
		    INS_USER
		)
		VALUES
		(
		    #{ACCIDENT_ID},
		    #{FILE_TYPE},
		    #{FILE_ID},
		    CURRENT_TIMESTAMP(),
		    #{REGI_EMP_NO}
		)
	</insert>
	
	<delete id="deleteAccidentFile" parameterType="map">
		DELETE
		FROM HSE_ACCIDENT_MGT_FILE
		WHERE ACCIDENT_ID = #{ACCIDENT_ID}
	</delete>
	
	<delete id="deleteAccidentFileWithId" parameterType="map">
		DELETE
		FROM HSE_ACCIDENT_MGT_FILE
		WHERE ACCIDENT_FILE_ID = #{ACCIDENT_FILE_ID}
	</delete>

</mapper>
