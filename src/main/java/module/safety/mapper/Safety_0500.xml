<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="safety.safety_0500">

	<select id="search" parameterType="map" resultType="HashMap">
		SELECT SUB.*
		FROM (
		SELECT 
		
		IF( (SELECT TCI.SYS_CONFIG_VALUE FROM TSST_CONFIG_INFO TCI WHERE SYS_CONFIG_KEY=#{STATUTORY_RENEW_SHP}) 
							&gt; DATEDIFF(HSE.SHP_EDU_DATE, CURRENT_TIMESTAMP()), 'Y', 'N') as isNew1,
							
		IF( (SELECT TCI.SYS_CONFIG_VALUE FROM TSST_CONFIG_INFO TCI WHERE SYS_CONFIG_KEY=#{STATUTORY_RENEW_DISABILITIES}) 
							&gt; DATEDIFF(HSE.DISABILITIES_EDU_DATE, CURRENT_TIMESTAMP()), 'Y', 'N') as isNew2,
							
		IF( (SELECT TCI.SYS_CONFIG_VALUE FROM TSST_CONFIG_INFO TCI WHERE SYS_CONFIG_KEY=#{STATUTORY_RENEW_PIPL}) 
							&gt; DATEDIFF(HSE.PIPL_EDU_DATE, CURRENT_TIMESTAMP()), 'Y', 'N') as isNew3,
							
		IF( (SELECT TCI.SYS_CONFIG_VALUE FROM TSST_CONFIG_INFO TCI WHERE SYS_CONFIG_KEY=#{STATUTORY_RENEW_RETIREMENT}) 
							&gt; DATEDIFF(HSE.RETIREMENT_EDU_DATE, CURRENT_TIMESTAMP()), 'Y', 'N') as isNew4,	
								
		IF( (SELECT TCI.SYS_CONFIG_VALUE FROM TSST_CONFIG_INFO TCI WHERE SYS_CONFIG_KEY=#{STATUTORY_RENEW_SAFETY}) 
							&gt; DATEDIFF(HSE.SAFETY_EDU_DATE, CURRENT_TIMESTAMP()), 'Y', 'N') as isNew5,				
		
		HSE.EDU_ID,
		HSE.EMP_NO,
		HSE.SHP_EDU_FILE,
		HSE.DISABILITIES_EDU_FILE,
		HSE.PIPL_EDU_FILE,
		HSE.RETIREMENT_EDU_FILE,
		HSE.INS_USER,
		HSE.UPD_USER,
		DATE_FORMAT(CONVERT_TZ(HSE.SHP_EDU_DATE, @@session.time_zone,
		#{session.CLIENT_TIMEZONE_OFFSET}), '%Y.%m.%d') AS SHP_EDU_DATE,
		DATE_FORMAT(CONVERT_TZ(HSE.SAFETY_EDU_DATE, @@session.time_zone,
		#{session.CLIENT_TIMEZONE_OFFSET}), '%Y.%m.%d') AS SAFETY_EDU_DATE,
		DATE_FORMAT(CONVERT_TZ(HSE.DISABILITIES_EDU_DATE, @@session.time_zone,
		#{session.CLIENT_TIMEZONE_OFFSET}), '%Y.%m.%d') AS
		DISABILITIES_EDU_DATE,
		DATE_FORMAT(CONVERT_TZ(HSE.PIPL_EDU_DATE,
		@@session.time_zone,
		#{session.CLIENT_TIMEZONE_OFFSET}), '%Y.%m.%d')
		AS
		PIPL_EDU_DATE,
		DATE_FORMAT(CONVERT_TZ(HSE.RETIREMENT_EDU_DATE,
		@@session.time_zone,
		#{session.CLIENT_TIMEZONE_OFFSET}), '%Y.%m.%d')
		AS
		RETIREMENT_EDU_DATE
		, HEM.EMP_NAME
		, CD.COMM_NM as DUTY_NAME
		, ROW_NUMBER()
		OVER (ORDER BY HSE.INS_DATE DESC ) AS RN
		FROM HSE_STATUTORY_EDU HSE
		INNER JOIN HSE_EMP_MGT HEM ON HSE.EMP_NO = HEM.EMP_NO
		INNER JOIN COMM_CD CD ON HEM.DUTY_CD = CD.COMM_CD
		<where>
			<if
				test="SEARCH_CRITERIA_ALL != null and SEARCH_CRITERIA_ALL != '' ">
				<trim prefix="AND">
					(
					LOWER(HEM.EMP_NAME) LIKE LOWER(CONCAT('%',#{SEARCH_CRITERIA_ALL}, '%'))
					OR LOWER(HEM.DUTY_CD) LIKE LOWER(CONCAT('%',#{SEARCH_CRITERIA_ALL}, '%'))
					OR LOWER(CD.COMM_NM) LIKE LOWER(CONCAT('%',#{SEARCH_CRITERIA_ALL}, '%'))
					OR LOWER(HSE.EMP_NO) LIKE LOWER(CONCAT('%',#{SEARCH_CRITERIA_ALL}, '%'))
					OR LOWER(HSE.SHP_EDU_DATE) LIKE LOWER(CONCAT('%',#{SEARCH_CRITERIA_ALL}, '%'))
					OR LOWER(HSE.DISABILITIES_EDU_DATE) LIKE LOWER(CONCAT('%',#{SEARCH_CRITERIA_ALL}, '%'))
					OR LOWER(HSE.PIPL_EDU_DATE) LIKE LOWER(CONCAT('%',#{SEARCH_CRITERIA_ALL}, '%'))
					OR LOWER(HSE.RETIREMENT_EDU_DATE) LIKE LOWER(CONCAT('%',#{SEARCH_CRITERIA_ALL}, '%'))
					)
				</trim>
			</if>
			<if test="SEARCH_EMP_NO != null and SEARCH_EMP_NO != '' ">
				<trim prefix="AND">
					HSE.EMP_NO = #{SEARCH_EMP_NO}
				</trim>
			</if>
			<if test="SEARCH_EMP_NAME != null and SEARCH_EMP_NAME != '' ">
				<trim prefix="AND">
					LOWER(HEM.EMP_NAME) LIKE LOWER(CONCAT('%',
					#{SEARCH_EMP_NAME}, '%'))
				</trim>
			</if>
			<if test="SEARCH_START_TIME != null and SEARCH_START_TIME != '' ">
		    		AND HSE.RETIREMENT_EDU_DATE &gt;= #{SEARCH_START_TIME}
		    	</if>
	    	<if test="SEARCH_END_TIME != null and SEARCH_END_TIME != '' ">
	    		AND HSE.RETIREMENT_EDU_DATE &lt;= #{SEARCH_END_TIME}
	    	</if>
		</where>
		) SUB
		WHERE SUB.RN BETWEEN (#{PAGE}-1) * #{PAGE_SIZE}+1 and (#{PAGE} * #{PAGE_SIZE})
		ORDER BY SUB.RN ASC
	</select>

	<select id="count" parameterType="map" resultType="HashMap">
		SELECT COUNT(*) AS CNT
		FROM HSE_STATUTORY_EDU HSE
		INNER JOIN HSE_EMP_MGT HEM ON HSE.EMP_NO = HEM.EMP_NO
		INNER JOIN COMM_CD CD ON HEM.DUTY_CD = CD.COMM_CD
		<where>
			<if
				test="SEARCH_CRITERIA_ALL != null and SEARCH_CRITERIA_ALL != '' ">
				<trim prefix="AND">
					(
					LOWER(HEM.EMP_NAME) LIKE LOWER(CONCAT('%',#{SEARCH_CRITERIA_ALL}, '%'))
					OR LOWER(HEM.DUTY_CD) LIKE LOWER(CONCAT('%',#{SEARCH_CRITERIA_ALL}, '%'))
					OR LOWER(CD.COMM_NM) LIKE LOWER(CONCAT('%',#{SEARCH_CRITERIA_ALL}, '%'))
					OR LOWER(HSE.EMP_NO) LIKE LOWER(CONCAT('%',#{SEARCH_CRITERIA_ALL}, '%'))
					OR LOWER(HSE.SHP_EDU_DATE) LIKE LOWER(CONCAT('%',#{SEARCH_CRITERIA_ALL}, '%'))
					OR LOWER(HSE.DISABILITIES_EDU_DATE) LIKE LOWER(CONCAT('%',#{SEARCH_CRITERIA_ALL}, '%'))
					OR LOWER(HSE.PIPL_EDU_DATE) LIKE LOWER(CONCAT('%',#{SEARCH_CRITERIA_ALL}, '%'))
					OR LOWER(HSE.RETIREMENT_EDU_DATE) LIKE LOWER(CONCAT('%',#{SEARCH_CRITERIA_ALL}, '%'))
					)
				</trim>
			</if>
			<if test="SEARCH_EMP_NO != null and SEARCH_EMP_NO != '' ">
				<trim prefix="AND">
					HSE.EMP_NO = #{SEARCH_EMP_NO}
				</trim>
			</if>
			<if test="SEARCH_EMP_NAME != null and SEARCH_EMP_NAME != '' ">
				<trim prefix="AND">
					LOWER(HEM.EMP_NAME) LIKE LOWER(CONCAT('%',
					#{SEARCH_EMP_NAME}, '%'))
				</trim>
			</if>
			<if test="SEARCH_START_TIME != null and SEARCH_START_TIME != '' ">
		    		AND HSE.RETIREMENT_EDU_DATE &gt;= #{SEARCH_START_TIME}
		    	</if>
	    	<if test="SEARCH_END_TIME != null and SEARCH_END_TIME != '' ">
	    		AND HSE.RETIREMENT_EDU_DATE &lt;= #{SEARCH_END_TIME}
	    	</if>
		</where>
	</select>

	<select id="get" parameterType="map" resultType="HashMap">
		SELECT 
		HSE.EDU_ID,
		HSE.EMP_NO,
		HSE.SHP_EDU_FILE,
		HSE.DISABILITIES_EDU_FILE,
		HSE.PIPL_EDU_FILE,
		HSE.RETIREMENT_EDU_FILE,
		HSE.INS_USER,
		HSE.UPD_USER,
		DATE_FORMAT(CONVERT_TZ(HSE.SHP_EDU_DATE, @@session.time_zone,
		#{session.CLIENT_TIMEZONE_OFFSET}), '%Y.%m.%d') AS SHP_EDU_DATE,
		DATE_FORMAT(CONVERT_TZ(HSE.SAFETY_EDU_DATE, @@session.time_zone,
		#{session.CLIENT_TIMEZONE_OFFSET}), '%Y.%m.%d') AS SAFETY_EDU_DATE,
		DATE_FORMAT(CONVERT_TZ(HSE.DISABILITIES_EDU_DATE, @@session.time_zone,
		#{session.CLIENT_TIMEZONE_OFFSET}), '%Y.%m.%d') AS
		DISABILITIES_EDU_DATE,
		DATE_FORMAT(CONVERT_TZ(HSE.PIPL_EDU_DATE,
		@@session.time_zone,
		#{session.CLIENT_TIMEZONE_OFFSET}), '%Y.%m.%d')
		AS
		PIPL_EDU_DATE,
		DATE_FORMAT(CONVERT_TZ(HSE.RETIREMENT_EDU_DATE,
		@@session.time_zone,
		#{session.CLIENT_TIMEZONE_OFFSET}), '%Y.%m.%d')
		AS
		RETIREMENT_EDU_DATE, 
		HEM.EMP_NAME,
		HEM.DUTY_CD
		, (
		SELECT CD.COMM_NM
		FROM COMM_CD CD
		WHERE HEM.DUTY_CD = CD.COMM_CD
		) as DUTY_NAME
		FROM HSE_STATUTORY_EDU HSE
		INNER JOIN HSE_EMP_MGT HEM ON
		HSE.EMP_NO = HEM.EMP_NO
		WHERE HSE.EDU_ID =
		#{EDU_ID}
	</select>

	<insert id="insert" parameterType="map" useGeneratedKeys="true" keyProperty="EDU_ID">
		INSERT INTO HSE_STATUTORY_EDU
		(
		EMP_NO,
		SHP_EDU_DATE,
		SAFETY_EDU_DATE,
		DISABILITIES_EDU_DATE,
		PIPL_EDU_DATE,
		RETIREMENT_EDU_DATE,

		INS_DATE,
		INS_USER
		)
		VALUES
		(
		#{EMP_NO},
		#{SHP_EDU_DATE},
		#{SAFETY_EDU_DATE},
		#{DISABILITIES_EDU_DATE},	
		#{PIPL_EDU_DATE},
		#{RETIREMENT_EDU_DATE},
		CURRENT_TIMESTAMP(),
		#{SESS_USER_ID}
		)
	</insert>

	<update id="update" parameterType="map">
		UPDATE HSE_STATUTORY_EDU HSE
		SET
		HSE.EDU_ID = #{EDU_ID}
		, HSE.EMP_NO = #{EMP_NO}
		, HSE.SHP_EDU_DATE = #{SHP_EDU_DATE}
		, HSE.SAFETY_EDU_DATE = #{SAFETY_EDU_DATE}
		, HSE.DISABILITIES_EDU_DATE = #{DISABILITIES_EDU_DATE}
		, HSE.PIPL_EDU_DATE = #{PIPL_EDU_DATE}
		, HSE.RETIREMENT_EDU_DATE = #{RETIREMENT_EDU_DATE}
		, HSE.UPD_DATE = #{UPD_DATE}
		, HSE.UPD_USER = #{UPD_USER}
		WHERE HSE.EDU_ID = #{EDU_ID}
	</update>
	
	<delete id="delete" parameterType="map">			
			DELETE FROM HSE_STATUTORY_EDU
			WHERE 
				EDU_ID = #{EDU_ID}

	</delete>
	
	<delete id="deleteFile" parameterType="map">
		<!-- perform delete because it has a foreign key -->
			DELETE FROM HSE_STATUTORY_EDU_FILE
			WHERE
				EDU_ID = #{EDU_ID};
	</delete>
	
	<delete id="dropEduFile" parameterType="map">
		DELETE FROM HSE_STATUTORY_EDU_FILE
		WHERE FILE_ID = #{FILE_ID}
	</delete>
	
	<insert id="insertEduFile" parameterType="map" useGeneratedKeys="true" keyProperty="EDU_FILE_ID">
		INSERT INTO HSE_STATUTORY_EDU_FILE
		(
		    EDU_ID,
		    FILE_TYPE,
		    FILE_ID,
		    INS_DATE,
		    INS_USER
		)
		VALUES
		(
		    #{EDU_ID},
		    #{FILE_TYPE},
		    #{FILE_ID},
		    CURRENT_TIMESTAMP(),
		    #{REGI_EMP_NO}
		)
	</insert>
	
	<select id="getFile" parameterType="map" resultType="HashMap">
		SELECT 
			HSEF.EDU_FILE_ID,
			HSEF.EDU_ID,
			HSEF.FILE_TYPE,
			HSEF.FILE_ID,
			DATE_FORMAT(CONVERT_TZ
				(HSEF.INS_DATE, @@session.time_zone,#{session.CLIENT_TIMEZONE_OFFSET}), '%Y.%m.%d') 
					AS INS_DATE,
			HSEF.INS_USER,
			HSEF.UPD_DATE,
			HSEF.UPD_USER,
			TF.ATCH_FLE_SEQ,
			TF.FLE_TP,
			TF.FLE_PATH,
			TF.FLE_NM,
			TF.NEW_FLE_NM,
			TF.FLE_SZ,
			TF.DESCRPT
		FROM HSE_STATUTORY_EDU_FILE HSEF
		INNER JOIN TCCO_FILE TF ON HSEF.FILE_ID = TF.ATCH_FLE_SEQ
		WHERE 
			HSEF.EDU_ID = #{EDU_ID}
			AND HSEF.FILE_TYPE = #{FILE_TYPE}
	</select>
	<select id="getFiles" parameterType="map" resultType="HashMap">
		SELECT 
			HSEF.EDU_FILE_ID,
			HSEF.EDU_ID,
			HSEF.FILE_TYPE,
			HSEF.FILE_ID,
			DATE_FORMAT(CONVERT_TZ
				(HSEF.INS_DATE, @@session.time_zone,#{session.CLIENT_TIMEZONE_OFFSET}), '%Y.%m.%d') 
					AS INS_DATE,
			HSEF.INS_USER,
			HSEF.UPD_DATE,
			HSEF.UPD_USER,
			TF.ATCH_FLE_SEQ,
			TF.FLE_TP,
			TF.FLE_PATH,
			TF.FLE_NM,
			TF.NEW_FLE_NM,
			TF.FLE_SZ,
			TF.DESCRPT
		FROM HSE_STATUTORY_EDU_FILE HSEF
		INNER JOIN TCCO_FILE TF ON HSEF.FILE_ID = TF.ATCH_FLE_SEQ
		WHERE 
			HSEF.EDU_ID = #{EDU_ID}
	</select>

</mapper>
