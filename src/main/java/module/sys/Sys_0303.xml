<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Notice(공지사항)										-->
<!-- << 개정이력(Modification Information) >>				-->
<!--　Date　　　　　　Name　　　　　 Desc.					-->
<!--　──────────　　  ──────────　　 ──────────				-->
<!--　2019.09.30　　  Yunju Kim　　　Notice C,R,U,D			-->
<mapper namespace="sys.sys0303">
	
	<sql id="selectAll">
		SELECT N.NOTICE_ID
			 , N.NOTICE_TIT
			 , N.NOTICE_CONT
			 , N.NOTICE_SETTING
			 , N.PERIOD_YN
			 , DATE_TO_STRING( CONVERT_TZ(N.START_DATE, @@session.time_zone, #{CLIENT_TIME_ZONE}), #{LANG_CODE}, '') START_DATE
			 , DATE_TO_STRING(CONVERT_TZ(N.END_DATE, @@session.time_zone, #{CLIENT_TIME_ZONE}), #{LANG_CODE}, '') END_DATE
			 , DATE_TO_STRING(CONVERT_TZ(N.INS_DT, @@session.time_zone, #{CLIENT_TIME_ZONE}), #{LANG_CODE}, 'T%T') INS_DT
			 , N.INS_ID
			 , N.INS_DT dt
			 , UI.USER_NM
			 , F.NEW_FLE_NM
			 , F.FLE_NM
			 , (
		    CASE 
		        WHEN NOTICE_SETTING = 'Y' AND N.PERIOD_YN = 'Y' AND NOW() <![CDATA[<=]]>  N.END_DATE  AND NOW() <![CDATA[>=]]>  N.START_DATE  THEN 1
		        WHEN  NOTICE_SETTING = 'Y' AND N.PERIOD_YN = 'Y' AND ( NOW() <![CDATA[>]]>  N.END_DATE  OR NOW() <![CDATA[<]]>  N.START_DATE)  THEN 0
		        WHEN NOTICE_SETTING = 'Y' AND ( N.PERIOD_YN <![CDATA[<>]]> 'Y' OR PERIOD_YN is null) THEN 1
		        ELSE 0
		    END) AS STATUS
		FROM   WT_NOTICE N
		LEFT JOIN TSST_USER U
			ON N.INS_ID = U.USER_UID
		LEFT JOIN TSST_USER_INFO UI
			ON U.USER_ID = UI.USER_ID
		LEFT JOIN TCCO_FILE F ON F.ATCH_FLE_SEQ = N.ATCH_FILE  COLLATE utf8mb4_general_ci
			
	</sql>
	
	<!-- 공지사항 등록 -->
	<insert id="insertNotice" parameterType="map" >
	
	BEGIN NOT ATOMIC
		DECLARE result VARCHAR(20);
		SELECT AUTO_INCREMENT into @result
		FROM  INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME   = 'WT_NOTICE';		
		INSERT INTO WT_NOTICE (NOTICE_TIT
							 , NOTICE_CONT
							 , INS_ID
							 , ATCH_FILE
							 , NOTICE_SETTING
			 				 , PERIOD_YN
			 				 <if test="START_DATE != null and START_DATE != '' ">
			 				  , START_DATE
			 				 </if>
			 				 <if test="END_DATE != null and END_DATE != '' ">
			 				 , END_DATE
			 				 </if>
							 )
					  VALUES (#{NOTICE_TIT}
					  		, #{NOTICE_CONT}
					  		, #{INS_ID}
					  		, #{ATCH_FILE}
					  		, #{NOTICE_SETTING}
			 				, #{PERIOD_YN}
			 				<if test="START_DATE != null and START_DATE != '' ">
			 				, CONVERT_TZ(STRING_TO_DATE(#{START_DATE}, #{LANG_CODE}, ''), #{CLIENT_TIME_ZONE}, @@session.time_zone) 
			 				</if>
			 				<if test="END_DATE != null and END_DATE != '' ">
			 				, CONVERT_TZ(STRING_TO_DATE(#{END_DATE}, #{LANG_CODE}, ''), #{CLIENT_TIME_ZONE}, @@session.time_zone)
			 				</if> 
			 				);
		
		<selectKey keyProperty="NOTICE_ID" resultType="Integer" order="AFTER">
			SELECT @result
		</selectKey>
		END;
		
	</insert>

	<!-- 공지사항 목록 조회 -->
	<select id="getNoticeList" parameterType="map" resultType="HashMap">
		SELECT @rownum:=@rownum+1 RNUM, A.*
		FROM  (<include refid="selectAll"/>
			   <where>
			   	   N.DEL_YN = 'N'
			   	   <if test="NOTICE_TIT != null and NOTICE_TIT != '' ">
			   	   	   AND N.NOTICE_TIT LIKE CONCAT('%', #{NOTICE_TIT}, '%')
			   	   </if>
			   	   <if test="NOTICE_CONT != null and NOTICE_CONT != '' ">
			   	   	   AND N.NOTICE_CONT LIKE CONCAT('%', #{NOTICE_CONT}, '%')
			   	   </if>
			   	   <if test="WRITER != null and WRITER != '' ">
			   	   	   AND UI.USER_NM LIKE CONCAT('%', #{WRITER}, '%')
			   	   </if>
		
					<if test="all != null and all != '' ">
						<trim prefix="AND">
						(N.NOTICE_TIT like CONCAT('%', #{all}, '%') OR N.NOTICE_CONT like CONCAT('%', #{all}, '%'))
						</trim>
					</if>
			   </where>
			   ORDER BY N.INS_DT DESC) A,
			   (SELECT @rownum:=0) R
		ORDER BY STATUS DESC, dt DESC
	</select>
	
	<!-- 공지사항 상세 조회 -->
	<select id="getNoticeByID" parameterType="map" resultType="HashMap">
		<include refid="selectAll"/>
		WHERE  N.NOTICE_ID = #{NOTICE_ID}
	</select>
	
	<!-- 공지사항 수정 -->
	<update id="updateNotice" parameterType="map">
		UPDATE WT_NOTICE
		SET    NOTICE_TIT = #{NOTICE_TIT}
			 , ATCH_FILE = #{ATCH_FILE}
			 , NOTICE_CONT = #{NOTICE_CONT}
			 , NOTICE_SETTING = #{NOTICE_SETTING}
			 				, PERIOD_YN = #{PERIOD_YN}
			 				, START_DATE = STRING_TO_DATE(#{START_DATE}, #{LANG_CODE}, '')
			 				, END_DATE = STRING_TO_DATE(#{END_DATE}, #{LANG_CODE}, '')
		WHERE  NOTICE_ID = #{NOTICE_ID}
	</update>
	
	<!-- 공지사항 삭제 -->
	<update id="deleteNotice" parameterType="map">
		UPDATE WT_NOTICE
		SET    DEL_YN = 'Y'
		WHERE  NOTICE_ID = #{NOTICE_ID}
	</update>
	
	<!-- 관리자 여부 확인 -->
	<select id="adminCheck" parameterType="map" resultType="HashMap">
		SELECT COUNT(USER_ID) ADMIN
		FROM   TSST_USER_ROLE
		WHERE  ROLE_ID = 'R000'
		  AND  USER_ID = #{USER_UID}
	</select>

</mapper>