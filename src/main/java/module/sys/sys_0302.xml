<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sys.sys0302">


	<select id="getListTurbine" parameterType="map" resultType="HashMap">
		SELECT GERATOR_ID,
		    A.GROUP_ID,
		    B.FARM_ID,
		    F.FARM_NM,
		    B.GROUP_NM,
		    A.POWER,
		   	DATE_TO_STRING(CONVERT_TZ(A.INS_DT, @@session.time_zone, #{CLIENT_TIME_ZONE}), #{LANG_CODE}, 'T%T') INS_DT,
		    A.INS_DT dt,
		    GERATOR_NM,
		    A.LOC_ID,
		    A.MANUFACTURER_ID COMPANY_ID,
		    A.LONGTUD,
		    C.COMPANY_NM MANFCTURE_NM,
		    A.LATITUDE,
		    A.DESCRPT,
<!-- 		    ROTOR_D, -->
		    GERATOR_EN_NM,
		    OPE.COMPANY_ID OPERATOR_ID,
		    OPE.COMPANY_NM OPERATOR_NM
		FROM WT_GERATOR A
		LEFT JOIN WT_GROUP B ON A.GROUP_ID = B.GROUP_ID
		LEFT JOIN WT_FARM F ON F.FARM_ID = B.FARM_ID
		LEFT JOIN WT_COMPANY C ON A.MANUFACTURER_ID = C.COMPANY_ID
		LEFT JOIN WT_COMPANY OPE ON A.OPERATOR_ID = OPE.COMPANY_ID
		
		<where>
				<if test="GERATOR_NM != null and GERATOR_NM != '' "> 
					<trim prefix="AND">
						GERATOR_NM like CONCAT('%', #{GERATOR_NM}, '%')
					</trim>
				</if>
				<if test="FARM_NM != null and FARM_NM != '' "> 
					<trim prefix="AND">
						F.FARM_NM like CONCAT('%', #{FARM_NM}, '%')
					</trim>
				</if>
				<if test="FARM_ID != null and FARM_ID != '' "> 
					<trim prefix="AND">
						F.FARM_ID = #{FARM_ID}
					</trim>
				</if>
				<if test="COMPANY_NM != null and COMPANY_NM != '' "> 
					<trim prefix="AND">
						C.COMPANY_NM like CONCAT('%', #{COMPANY_NM}, '%')
					</trim>
				</if>
				<if test="COMPANY_ID != null and COMPANY_ID != '' "> 
					<trim prefix="AND">
						C.COMPANY_ID = #{COMPANY_ID}
					</trim>
				</if>
				<if test="all != null and all != '' "> 
					<trim prefix="AND">
						(GERATOR_NM like CONCAT('%', #{all}, '%') OR F.FARM_NM like CONCAT('%', #{all}, '%') OR  C.COMPANY_NM like CONCAT('%', #{all}, '%'))
					</trim>
				</if>
		</where>
		
		ORDER BY dt DESC
	</select>
	
	<select  id="checkDuplID" parameterType="map" resultType="HashMap">
	SELECT * FROM (SELECT * FROM WT_GERATOR 
	<where>
	<if test="GERATOR_ID_OLD != null and GERATOR_ID_OLD != '' ">
				GERATOR_ID != #{GERATOR_ID_OLD}
			</if>
			</where>  
			) A WHERE A.GERATOR_ID = #{GERATOR_ID}
	;
	</select>
	
		
	<select  id="checkDoubleName" parameterType="map" resultType="HashMap">
	SELECT * FROM (SELECT * FROM WT_GERATOR 
	<where>
	<if test="GERATOR_NM_OLD != null and GERATOR_NM_OLD != '' ">
				GERATOR_NM != #{GERATOR_NM_OLD}
			</if>
			</where>  
			) A 
			LEFT JOIN WT_GROUP B ON A.GROUP_ID = B.GROUP_ID
			LEFT JOIN WT_FARM F ON F.FARM_ID = B.FARM_ID
			
			WHERE A.GERATOR_NM = #{GERATOR_NM} AND B.GROUP_ID = #{GROUP_ID} AND F.FARM_ID = #{FARM_ID};
	</select>
	
	<select id="getListTurbine2" parameterType="map" resultType="HashMap">
		SELECT GERATOR_ID,
		    A.GROUP_ID,
			B.FARM_ID,
			D.FARM_NM,
			B.GROUP_NM,
			A.POWER,
		   	DATE_TO_STRING(A.INS_DT, #{LANG_CODE}, 'T%T') INS_DT,
		    A.INS_DT dt,
		    			A.GERATOR_NM,
			A.LOC_ID,
			A.LONGTUD,
			A.MANUFACTURER_ID COMPANY_ID,
			C.COMPANY_NM MANFCTURE_NM,
			A.LATITUDE,
			A.DESCRPT,
			A.GERATOR_EN_NM
		FROM WT_GERATOR A
		LEFT JOIN WT_GROUP B ON A.GROUP_ID = B.GROUP_ID
		LEFT JOIN WT_COMPANY C ON A.MANUFACTURER_ID = C.COMPANY_ID
		LEFT JOIN WT_FARM D ON D.FARM_ID = B.FARM_ID
		<where>
			<if test="GERATOR_NM != null and GERATOR_NM != '' ">
				<trim prefix="AND">
				A.GERATOR_NM LIKE CONCAT('%', #{GERATOR_NM}, '%')
				</trim>
			</if>
			AND  CHECK_PERMISSION_GERATOR(#{USER_UID}, GERATOR_ID)
		</where>
		
		ORDER BY dt DESC
	</select>

	<select id="checkGenerator" parameterType="map" resultType="Boolean">
		SELECT CHECK_PERMISSION_GERATOR(#{USER_UID}, #{GERATOR_ID})
	
	</select>	
	<select id="checkEvent" parameterType="map" resultType="Boolean">
		SELECT CHECK_PERMISSION_EVENT(#{USER_UID}, #{EVENT_ID})
	
	</select>
	<select id="checkMainPart" parameterType="map" resultType="Boolean">
		SELECT CHECK_PERMISSION_MAIN_PART(#{USER_UID}, #{MAIN_PART_ID})
	
	</select>
	<select id="checkPart" parameterType="map" resultType="Boolean">
		SELECT CHECK_PERMISSION_PART(#{USER_UID}, #{PART_ID})
	</select>
	
	<select id="getTurbineByGroupID" parameterType="map" resultType="HashMap">
		SELECT A.GERATOR_ID,
		    A.GROUP_ID,
		    B.FARM_ID,
		    B.GROUP_NM,
		    POWER,
		   	DATE_TO_STRING(A.INS_DT, #{LANG_CODE}, 'T%T') INS_DT,
		    GERATOR_NM,
		    A.MANUFACTURER_ID COMPANY_ID,
		    C.COMPANY_NM MANFCTURE_NM,
		    LONGTUD,
		    LATITUDE,
		    LOC_ID,
		    A.DESCRPT,
<!-- 		    ROTOR_D, -->
		    GERATOR_EN_NM
		FROM WT_GERATOR A
		LEFT JOIN WT_GROUP B ON A.GROUP_ID = B.GROUP_ID
		LEFT JOIN WT_COMPANY C ON A.MANUFACTURER_ID = C.COMPANY_ID
		
		<where>
					<if test="GROUP_ID != null and GROUP_ID != '' "> 
						<trim prefix="AND">
						A.GROUP_ID = #{GROUP_ID}
				</trim>
		</if>
		</where>
		</select>
		
		<select id="getTurbineByGroupID2" parameterType="map" resultType="HashMap">
		SELECT A.GERATOR_ID,
		    A.GROUP_ID,
		    B.FARM_ID,
		    B.GROUP_NM,
		    POWER,
		   	DATE_TO_STRING(A.INS_DT, #{LANG_CODE}, 'T%T') INS_DT,
		    GERATOR_NM,
		    C.COMPANY_NM MANFCTURE_NM,
		    A.MANUFACTURER_ID COMPANY_ID,
		    LONGTUD,
		    LATITUDE,
		    LOC_ID,
		    A.DESCRPT,
<!-- 		    ROTOR_D, -->
		    GERATOR_EN_NM
		FROM WT_GERATOR A
		LEFT JOIN WT_GROUP B ON A.GROUP_ID = B.GROUP_ID
		LEFT JOIN WT_COMPANY C ON A.MANUFACTURER_ID = C.COMPANY_ID
		
		<where>
					<if test="GROUP_ID != null and GROUP_ID != '' "> 
						<trim prefix="AND">
						A.GROUP_ID = #{GROUP_ID}
				</trim>
		</if>
		AND  CHECK_PERMISSION_GERATOR(#{USER_UID}, GERATOR_ID)
		</where>
		
		
	</select>
	
<!-- 	return more than 1 row -->
	<select id="getTurbineByID" parameterType="map" resultType="HashMap">
	SELECT A.GERATOR_ID,
		    A.GROUP_ID,
		    B.FARM_ID,
		    B.GROUP_NM,
		    POWER,
		   	DATE_TO_STRING(A.INS_DT, #{LANG_CODE}, ' %T') INS_DT,
		    GERATOR_NM,
		    LONGTUD,
		    LATITUDE,
		    LOC_ID,
		    A.MANUFACTURER_ID COMPANY_ID,
		    COM.COMPANY_NM MANFCTURE_NM,
		    A.DESCRPT,
<!-- 		    ROTOR_D, -->
		    GERATOR_EN_NM,
            SERIAL_NO,
            C.MAIN_PART_ID,
            D.SERIAL_NO,
            D.PROP,
            OPE.COMPANY_ID OPERATOR_ID,
            OPE.COMPANY_NM OPERATOR_NM
		   
		FROM WT_GERATOR A
		LEFT JOIN WT_GROUP B ON A.GROUP_ID = B.GROUP_ID
		LEFT JOIN WT_GERATOR_PART C ON A.GERATOR_ID = C.GERATOR_ID
        LEFT JOIN  (SELECT       D.MAIN_PART_ID, SERIAL_NO,  GROUP_CONCAT(PART_PROP_ID, ':',  PROP_VALUE) PROP
		FROM WT_MAIN_PART D
        LEFT JOIN WT_MAIN_PART_DETAIL E ON D.MAIN_PART_ID = E.MAIN_PART_ID
        GROUP BY   D.MAIN_PART_ID,SERIAL_NO
        ) D ON C.MAIN_PART_ID = D.MAIN_PART_ID
        LEFT JOIN WT_COMPANY COM ON A.MANUFACTURER_ID = COM.COMPANY_ID
        LEFT JOIN WT_COMPANY OPE ON A.OPERATOR_ID = OPE.COMPANY_ID
        
		<where>
					<if test="GERATOR_ID != null and GERATOR_ID != '' "> 
						<trim prefix="AND">
						A.GERATOR_ID = #{GERATOR_ID}
				</trim>
		</if>
		</where>
		
		
	</select>
	
	<select id="get1TurbineByID" parameterType="map" resultType="HashMap">
	SELECT A.GERATOR_ID,
		    A.GROUP_ID,
		    POWER,
		   	DATE_TO_STRING(A.INS_DT, #{LANG_CODE}, 'T%T') INS_DT,
		    GERATOR_NM,
		    LONGTUD,
		    LATITUDE,
		    LOC_ID,
		    C.COMPANY_NM MANFCTURE_NM
		FROM WT_GERATOR A
		LEFT JOIN WT_COMPANY C ON A.MANUFACTURER_ID = C.COMPANY_ID
		
		WHERE 			A.GERATOR_ID = #{TURBINE_ID}
		
	</select>
	<insert id="insertTurbine" parameterType="map">
	
	INSERT INTO WT_GERATOR
	(GERATOR_ID,
	GROUP_ID,
	POWER,
	INS_DT,
	GERATOR_NM,
	LONGTUD,
	LATITUDE,
	LOC_ID,
	DESCRPT,
	GERATOR_EN_NM,
	MANUFACTURER_ID,
	OPERATOR_ID)
	VALUES
	(#{GERATOR_ID},
	#{GROUP_ID},
	#{POWER},
	SYSDATE(),
	#{GERATOR_NM},
	#{LONGTUD},
	#{LATITUDE},
	#{LOC_ID},
	#{DESCRPT},
	#{GERATOR_EN_NM},
	#{COMPANY_ID},
	#{OPERATOR_ID})
	
	</insert>
<!-- 	<insert id="insertTurbinePart" parameterType="map"> -->
	
<!-- 	INSERT INTO WT_GERATOR_PART -->
<!-- 	(GERATOR_ID, -->
<!-- 	MAIN_PART_ID, -->
<!-- 	STATUS) -->
<!-- 	VALUES -->
<!-- 	(#{GERATOR_ID}, -->
<!-- 	#{MAIN_PART_ID}, -->
<!-- 	'Y') -->
<!-- 	</insert> -->
	
	<insert id="insertMainPart" parameterType="map">
	BEGIN NOT ATOMIC
		DECLARE result VARCHAR(20);
		CALL proc_gen_id('MAIN_PART_SEQ', @result);
		INSERT INTO WT_MAIN_PART
		(MAIN_PART_ID,
		PART_CD,
		PART_NM,
		SERIAL_NO)
		VALUES
		(@result,
		#{PART_CD},
		#{PART_NM},
		#{SERIAL_NUMBER});
		
		INSERT INTO WT_GERATOR_PART
		(GERATOR_ID,
		MAIN_PART_ID,
		STATUS)
		VALUES
		(#{GERATOR_ID},
		@result,
		'Y');
		<selectKey keyProperty="MAIN_PART_ID" resultType="String" order="AFTER">
			SELECT @result
		</selectKey>
		
		END;
	
		
	</insert>
	
	<update id="updateMainPart" parameterType="map">
		UPDATE WT_MAIN_PART SET SERIAL_NO = #{SERIAL_NUMBER} WHERE MAIN_PART_ID = #{MAIN_PART_ID}
	</update>
	
	
	
	<insert id="insertPartDetail" parameterType="map">
	
			INSERT INTO WT_MAIN_PART_DETAIL
			(MAIN_PART_ID,
			PART_PROP_ID,
			PROP_VALUE)
			VALUES
			(#{MAIN_PART_ID},
			#{PART_PROP_ID},
			#{PROP_VALUE})

	
	</insert>
	
	<update id="updatePartDetail" parameterType="map">
		UPDATE WT_MAIN_PART_DETAIL SET PROP_VALUE = #{PROP_VALUE} WHERE  MAIN_PART_ID = #{MAIN_PART_ID} AND PART_PROP_ID = #{PART_PROP_ID}
	</update>
	
	<update id="updateTurbine">
	UPDATE WT_GERATOR
	SET
	GROUP_ID = #{GROUP_ID},
	POWER = #{POWER},
<!-- 	INS_DT = STR_TO_DATE(#{INS_DT},'%Y%m%d') , -->
	GERATOR_NM = #{GERATOR_NM},
	LONGTUD = #{LONGTUD},
	LATITUDE = #{LATITUDE},
	LOC_ID = #{LOC_ID},
	DESCRPT = #{DESCRPT},
	MANUFACTURER_ID = #{COMPANY_ID},
	OPERATOR_ID = #{OPERATOR_ID},
	GERATOR_EN_NM = #{GERATOR_EN_NM}
<!-- 	,	ROTOR_D = #{ROTOR_D} -->
	WHERE GERATOR_ID = #{GERATOR_ID}
	</update>
	
	
	
	<delete id="deleteTurbines"  parameterType="map">
		BEGIN NOT ATOMIC
			DELETE FROM WT_GERATOR_PART WHERE GERATOR_ID = #{GERATOR_ID};
		
			DELETE FROM WT_GERATOR WHERE GERATOR_ID = #{GERATOR_ID};
		END;
	</delete>
		
</mapper>