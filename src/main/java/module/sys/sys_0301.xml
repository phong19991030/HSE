<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sys.sys0301">


	<select id="getListFarm" parameterType="map"
		resultType="HashMap">
		SELECT F.FARM_ID,
		F.FARM_NM,
		F.LONGTUD,
		F.LATITUDE,
		F.DESCRPT,
		DATE_TO_STRING(CONVERT_TZ(F.INS_DT, @@session.time_zone, #{CLIENT_TIME_ZONE}), #{LANG_CODE}, 'T%T') INS_DT,
		F.INS_DT dt,
		FC.COMPANY_ID,
		FC.COMPANY_NM,
		U.USER_ID,
		UI.USER_NM,
		SUM(G.POWER) POWER,
		SUM(IF(G.GERATOR_ID is not null , 1, 0)) COUNT_GENERATOR
		
		FROM WT_FARM F
		LEFT JOIN 
		(
		SELECT FARM_ID, 
		group_concat(C.COMPANY_ID separator ', ') COMPANY_ID, 
		group_concat(COMPANY_NM separator ', ')    COMPANY_NM  
		FROM WT_FARM_COMPANY FC
		LEFT JOIN WT_COMPANY C ON C.COMPANY_ID = FC.COMPANY_ID
		GROUP BY FARM_ID 
		) FC ON FC.FARM_ID = F.FARM_ID
		LEFT JOIN WT_GROUP GR ON F.FARM_ID = GR.FARM_ID
		LEFT JOIN WT_GERATOR G ON GR.GROUP_ID = G.GROUP_ID
		LEFT JOIN TSST_USER U ON U.USER_UID = F.INS_USER
		LEFT JOIN TSST_USER_INFO UI ON UI.USER_ID = U.USER_ID
		<where>
			<if test="FARM_NM != null and FARM_NM != '' ">
				<trim prefix="AND">
					F.FARM_NM like CONCAT('%', #{FARM_NM}, '%')
				</trim>
			</if>
			<if test="COMPANY_NM != null and COMPANY_NM != '' ">
				<trim prefix="AND">
					FC.COMPANY_NM like CONCAT('%', #{COMPANY_NM}, '%')
				</trim>
			</if>
			
			<if test="all != null and all != '' ">
				<trim prefix="AND">
				(F.FARM_NM like CONCAT('%', #{all}, '%') OR FC.COMPANY_NM like CONCAT('%', #{all}, '%'))
				</trim>
			</if>
		</where>
	
		GROUP BY F.FARM_ID,
		F.FARM_NM,
		F.LONGTUD,
		F.LATITUDE,
		F.DESCRPT,
		F.INS_DT,
		U.USER_ID,
		UI.USER_NM,
		FC.COMPANY_ID,
		FC.COMPANY_NM
		ORDER BY dt DESC
	</select>

	<select id="getListFarm2" parameterType="map"
		resultType="HashMap">
		SELECT F.FARM_ID,
       FARM_NM,
       LONGTUD,
       LATITUDE,
       F.DESCRPT,
       POWER,
       DATE_TO_STRING(F.INS_DT, #{LANG_CODE}, 'T%T') INS_DT,
       RMK,
       group_concat(C.COMPANY_ID separator ', ') COMPANY_ID,
       group_concat(C.COMPANY_NM separator ', ') COMPANY_NM
	FROM WT_FARM F
    LEFT JOIN WT_FARM_COMPANY FC ON F.FARM_ID = FC.FARM_ID
        LEFT JOIN WT_COMPANY C ON FC.COMPANY_ID = C.COMPANY_ID
		<where>
			<if test="FARM_NM != null and FARM_NM != '' ">
				<trim prefix="AND">
					F.FARM_NM like CONCAT('%', #{FARM_NM}, '%')
				</trim>
			</if>
<!-- 			<if test="COMPANY_NM != null and COMPANY_NM != '' "> -->
<!-- 				<trim prefix="AND"> -->
<!-- 					COMPANY_NM like CONCAT('%', #{COMPANY_NM}, '%') -->
<!-- 				</trim> -->
<!-- 			</if> -->
			AND CHECK_PERMISSION_FARM(#{USER_UID}, F.FARM_ID)
		</where>
			GROUP BY F.FARM_ID,
		    FARM_NM,
		    LONGTUD,
		    LATITUDE,
		    F.DESCRPT,
		    POWER,
		    INS_DT,
		    RMK
		ORDER BY F.INS_DT DESC
	</select>
	
	<select id="checkDoubleName" parameterType="map" resultType="HashMap">
			<if test="CRUD eq 'C'.toString()">
				SELECT * FROM WT_FARM WHERE FARM_NM = #{FARM_NM};
			</if>	
			<if test="CRUD neq 'C'.toString() ">
				SELECT * FROM (SELECT * FROM WT_FARM WHERE FARM_NM != #{FARM_NM_OLD}) A WHERE FARM_NM = #{FARM_NM};
			</if>
	</select>
	
	<select id="getFarmById" parameterType="map" resultType="HashMap">
		SELECT F.FARM_ID,
       FARM_NM,
       LONGTUD,
       LATITUDE,
       F.DESCRPT,
       POWER,
       DATE_TO_STRING(F.INS_DT, #{LANG_CODE}, 'T%T') INS_DT,
       RMK,
       group_concat(C.COMPANY_ID separator ', ') COMPANY_ID,
       group_concat(C.COMPANY_NM separator ', ') COMPANY_NM
		FROM WT_FARM F
    LEFT JOIN WT_FARM_COMPANY FC ON F.FARM_ID = FC.FARM_ID
         LEFT JOIN WT_COMPANY C ON FC.COMPANY_ID = C.COMPANY_ID
         
		WHERE F.FARM_ID = #{FARM_ID}
		GROUP BY F.FARM_ID, FARM_NM, LONGTUD, LATITUDE, F.DESCRPT, POWER, F.INS_DT, RMK
	</select>
	
	<select id="getCompany" parameterType="map" resultType="HashMap">
		SELECT COMPANY_ID,
	    	COMPANY_NM
		FROM WT_COMPANY
	
	</select>
	
	<select id="getListGroup" parameterType="map" resultType="HashMap">
		SELECT GROUP_ID,
		    GROUP_NM,
		    FARM_ID
		FROM WT_GROUP
		<where>
			<if test="FARM_ID != null and FARM_ID != '' "> 
				<trim prefix="AND">
					FARM_ID = #{FARM_ID}
				</trim>
			</if>
			<if test="display_all == null or display_all == '' "> 
			
					AND GROUP_NM != 'NO GROUP'
			
			</if>
		</where>
		ORDER BY FARM_ID
	
	</select>
	
	<select id="getListGroupDisplayFarm" parameterType="map" resultType="HashMap">
		SELECT G.GROUP_ID,
		    CONCAT(G.GROUP_NM, ' - ', F.FARM_NM) GROUP_NM,
		    G.FARM_ID
		FROM WT_GROUP G
		LEFT JOIN WT_FARM F ON F.FARM_ID = G.FARM_ID
		
		<where>
			<if test="FARM_ID != null and FARM_ID != '' "> 
				<trim prefix="AND">
					F.FARM_ID = #{FARM_ID}
				</trim>
			</if>
			<if test="display_all == null or display_all == '' "> 
			
					AND GROUP_NM != 'NO GROUP'
			
			</if>
		</where>
		ORDER BY FARM_ID
	
	</select>

	<select id="getListGroup2" parameterType="map"
		resultType="HashMap">
		SELECT GROUP_ID,
		GROUP_NM,
		FARM_ID
		FROM WT_GROUP
		<where>
			<if test="FARM_ID != null and FARM_ID != '' ">
				<trim prefix="AND">
					FARM_ID = #{FARM_ID}
				</trim>
			</if>
			AND CHECK_PERMISSION_GROUP(#{USER_UID}, GROUP_ID)
		</where>

	</select>

	<insert id="insertFarm" parameterType="map">
		BEGIN NOT ATOMIC
		DECLARE result VARCHAR(20);
		CALL proc_gen_id('FARM_SEQ', @result);
		INSERT INTO WT_FARM
		(FARM_ID,
		FARM_NM,
		LONGTUD,
		LATITUDE,
		DESCRPT,
		POWER,
		INS_DT,
		INS_USER,
		RMK
<!-- 		COMPANY_ID -->
		<!-- , WEBSITE -->
		)
		VALUES
		(@result,
		#{FARM_NM},
		#{LONGTUD},
		#{LATITUDE},
		#{DESCRPT},
		#{POWER},
		SYSDATE(),
		#{INS_USER},
		#{RMK}
<!-- 		#{COMPANY_ID} -->
		<!-- , #{WEBSITE} -->
		);
		<selectKey order="AFTER" keyProperty="FARM_ID"
			resultType="String">
			SELECT @result;
		</selectKey>

		END;

	</insert>
	
	
	
	<update id="updateFarm" parameterType="map">
		UPDATE WT_FARM
		SET
		FARM_NM = #{FARM_NM},
		LONGTUD = #{LONGTUD},
		LATITUDE = #{LATITUDE},
		DESCRPT = #{DESCRPT},
		POWER = #{POWER},
		RMK = #{RMK}
<!-- 		COMPANY_ID = #{COMPANY_ID} -->
		WHERE FARM_ID =  #{FARM_ID}
	</update>

	<update id="updateGroup" parameterType="map">
		BEGIN NOT ATOMIC
		DECLARE result VARCHAR(20);

		<foreach collection="LIST_GROUP" item="item" separator="">
			<choose>
				<when test="item.STATUS eq 'C'.toString()">
					CALL proc_gen_id('GROUP_SEQ', @result);

					INSERT INTO WT_GROUP
					(GROUP_ID,
					GROUP_NM,
					FARM_ID)
					VALUES
					(@result,
					#{item.GROUP_NM},
					#{FARM_ID});

				</when>
				<when
					test="item.STATUS eq 'D'.toString() or (item.GROUP_NM.trim()=='' and item.STATUS eq 'U'.toString())">
					DELETE FROM WT_GROUP
					WHERE GROUP_ID = #{item.GROUP_ID}
					AND GROUP_NM != 'NO GROUP';

				</when>
				<otherwise>
					UPDATE WT_GROUP
					SET
					GROUP_NM = #{item.GROUP_NM},
					FARM_ID = #{FARM_ID}
					WHERE GROUP_ID = #{item.GROUP_ID}
					AND GROUP_NM != 'NO GROUP';
				</otherwise>
			</choose>
		</foreach>

		END;

	</update>


	<insert id="insertGroup" parameterType="map">
		BEGIN NOT ATOMIC
		DECLARE result VARCHAR(20);

		<foreach collection="group" item="item" separator="">
			<if test="item.GROUP_NM != null and item.GROUP_NM.trim() != '' ">
				CALL proc_gen_id('GROUP_SEQ', @result);
				INSERT INTO WT_GROUP
				(GROUP_ID,
				GROUP_NM,
				FARM_ID)
				VALUES
				( @result,
				#{item.GROUP_NM},
				#{FARM_ID});
			</if>
		</foreach>

		END;
	</insert>
	
	<delete id="deleteFarms"  parameterType="map">
		BEGIN NOT ATOMIC
			DELETE FROM WT_GROUP WHERE FARM_ID = #{FARM_ID}; 
			DELETE FROM WT_FARM_COMPANY WHERE FARM_ID = #{FARM_ID}; 
			
			DELETE FROM WT_FARM WHERE FARM_ID = #{FARM_ID}; 
			
		END;
	</delete>
	
	<insert  id="insertFarmCompany" parameterType="map">
		BEGIN NOT ATOMIC
			<foreach collection="COMPANY_LIST" item="item" separator="">
				INSERT INTO WT_FARM_COMPANY VALUES(#{FARM_ID}, #{item});
			</foreach>
		END;
	</insert>
	
	<update id="updateFarmCompany" parameterType="map">
			BEGIN NOT ATOMIC
				DELETE FROM WT_FARM_COMPANY WHERE FARM_ID = #{FARM_ID};
			<foreach collection="COMPANY_LIST" item="item" separator="">
				INSERT INTO WT_FARM_COMPANY VALUES(#{FARM_ID}, #{item});
			</foreach>
			END;
	</update>
	
	<select id="getLocationWTG" parameterType="map" resultType="HashMap">
		SELECT GERATOR_ID, GERATOR_NM, GROUP_NM, FARM_NM from WT_GERATOR A 
		LEFT JOIN WT_GROUP B
		ON A.GROUP_ID = B.GROUP_ID
		LEFT JOIN WT_FARM C
		ON B.FARM_ID = C.FARM_ID
		WHERE GERATOR_ID = #{WTG_ID}
	</select>
	
	
</mapper>