<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hea.hea0002">

	<select id="getListEmpHealth" parameterType="map" resultType="HashMap">
		SELECT SUB.*
		FROM (
			SELECT 
				E.EMP_NO,
				E.EMP_NAME,
				E.DUTY_CD,
				H.EMP_HEALTH_ID,
				H.HEIGHT,
				H.WEIGHT,
				H.LEFT_EYE,
				H.RIGHT_EYE,
				H.SBP,
				H.DBP,
				H.DISEASES,
				DATE_FORMAT(CONVERT_TZ(H.HEALTH_CHECK_CERT_DATE, @@session.time_zone,  #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%d') AS HEALTH_CHECK_CERT_DATE,
				H.HEALTH_CHECK_FILE,
				DATE_FORMAT(CONVERT_TZ(H.INS_DATE, @@session.time_zone,  #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%dT%T') AS INS_DATE,
				F.ATCH_FLE_SEQ,
				F.FLE_TP,
				F.FLE_PATH,
				F.FLE_NM,
				F.NEW_FLE_NM,
				F.FLE_SZ,
				C1.COMM_NM as POSITION,
				ROW_NUMBER() OVER (ORDER BY E.INS_DATE DESC) AS RN,
				C.COMM_NM
    		FROM HSE_EMP_HEALTH H 
    			LEFT JOIN HSE_EMP_MGT E ON H.EMP_NO = E.EMP_NO 
    			LEFT JOIN TCCO_FILE F ON F.ATCH_FLE_SEQ = H.HEALTH_CHECK_FILE
    			LEFT JOIN COMM_CD C ON C.COMM_CD = E.DUTY_CD
    			LEFT JOIN COMM_CD C1 ON E.POSITION_CD = C1.COMM_CD
    		WHERE 1 = 1
    			<if test="SEARCH_ALL != null and SEARCH_ALL != '' ">
		    		AND (
				    	LOWER(E.EMP_NAME) LIKE LOWER(CONCAT('%', #{SEARCH_ALL}, '%'))
        				OR LOWER(C.COMM_NM) LIKE LOWER(CONCAT('%', #{SEARCH_ALL}, '%'))
					)
		   		</if>
		    	<if test="SEARCH_EMP_NO != null and SEARCH_EMP_NO != '' ">
			    	AND (
			    		LOWER(E.EMP_NO) LIKE LOWER(CONCAT('%', #{SEARCH_EMP_NO}, '%'))
			    	)
				</if>
				<if test="SEARCH_CERT_DATE != null and SEARCH_CERT_DATE != '' ">
		    		AND H.HEALTH_CHECK_CERT_DATE = #{SEARCH_CERT_DATE}
		    	</if>
		)SUB
		WHERE SUB.RN BETWEEN (#{PAGE}-1) * #{PAGE_SIZE}+1 and (#{PAGE} * #{PAGE_SIZE})
		ORDER BY SUB.RN ASC
	</select>
	
	<select id="getDetailInfo" parameterType="map" resultType="HashMap">
		SELECT 
			E.EMP_NO,
			E.EMP_NAME,
			E.DUTY_CD,
			H.EMP_HEALTH_ID,
			H.HEIGHT,
			H.WEIGHT,
			H.LEFT_EYE,
			H.RIGHT_EYE,
			H.SBP,
			H.DBP,
			H.DISEASES,
			DATE_FORMAT(CONVERT_TZ(H.HEALTH_CHECK_CERT_DATE, @@session.time_zone,  #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%d') AS HEALTH_CHECK_CERT_DATE,
			H.HEALTH_CHECK_FILE,
			DATE_FORMAT(CONVERT_TZ(H.INS_DATE, @@session.time_zone,  #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%dT%T') AS INS_DATE,
			F.ATCH_FLE_SEQ,
			F.FLE_TP,
			F.FLE_PATH,
			F.FLE_NM,
			F.NEW_FLE_NM,
			F.FLE_SZ,
			ROW_NUMBER() OVER (ORDER BY E.INS_DATE DESC) AS RN,
			C.COMM_NM
    	FROM HSE_EMP_MGT E 
    		LEFT JOIN HSE_EMP_HEALTH H ON H.EMP_NO = E.EMP_NO 
    		<!-- LEFT JOIN HSE_EMP_DISEASES D ON H.EMP_HEALTH_ID = D.EMP_HEALTH_ID -->
    		LEFT JOIN TCCO_FILE F ON F.ATCH_FLE_SEQ = H.HEALTH_CHECK_FILE
    		LEFT JOIN COMM_CD C ON C.COMM_CD = E.DUTY_CD
    	WHERE H.EMP_HEALTH_ID = #{EMP_HEALTH_ID}
	</select>
	
	<insert id="insert" parameterType="map" useGeneratedKeys="true"  keyProperty="EMP_HEALTH_ID">
		INSERT INTO HSE_EMP_HEALTH
		(
		    EMP_NO,
		    HEIGHT,
		    WEIGHT,
		    LEFT_EYE,
		    RIGHT_EYE,
		    SBP,
		    DBP,
		    DISEASES,
		    HEALTH_CHECK_CERT_DATE,
		    HEALTH_CHECK_FILE,
		    INS_DATE,
		    INS_USER
		)
		VALUES
		(
		    #{EMP_NO},
		    #{HEIGHT},
		    #{WEIGHT},
		    #{LEFT_EYE},
		    #{RIGHT_EYE},
		    #{SBP},
		    #{DBP},
		    #{DISEASES},
		    #{HEALTH_CHECK_CERT_DATE},
		    #{HEALTH_CHECK_FILE},
		    CURRENT_TIMESTAMP(),
		    #{session.USER_UID}
		)
	</insert>
	
	<update id="update" parameterType="map">
		UPDATE HSE_EMP_HEALTH
		SET EMP_NO = #{EMP_NO},
			HEIGHT = #{HEIGHT},
		  	WEIGHT = #{WEIGHT},
		  	LEFT_EYE = #{LEFT_EYE},
		    RIGHT_EYE = #{RIGHT_EYE},
		    SBP = #{SBP},
		  	DBP = #{DBP},
		  	DISEASES = #{DISEASES},
		    HEALTH_CHECK_CERT_DATE = #{HEALTH_CHECK_CERT_DATE},
		    HEALTH_CHECK_FILE = #{HEALTH_CHECK_FILE},
		    UPD_DATE = CURRENT_TIMESTAMP(),
		    UPD_USER = #{session.USER_UID}
		    
		WHERE EMP_HEALTH_ID = #{EMP_HEALTH_ID}
	</update>
	
	<delete id="delete" parameterType="map">
		DELETE
		FROM HSE_EMP_HEALTH
		WHERE EMP_HEALTH_ID = #{EMP_HEALTH_ID}
	</delete>
	
	<select id="getEmpHealthCnt" parameterType="map" resultType="HashMap">
		SELECT COUNT(*) AS CNT
		FROM HSE_EMP_HEALTH H
			LEFT JOIN HSE_EMP_MGT E ON H.EMP_NO = E.EMP_NO
			LEFT JOIN COMM_CD C ON C.COMM_CD = E.DUTY_CD
		<where>
	    	<if test="SEARCH_ALL != null and SEARCH_ALL != '' ">
		    	AND (
				    LOWER(E.EMP_NAME) LIKE CONCAT('%', #{SEARCH_ALL}, '%')
        			OR UPPER(C.COMM_NM) LIKE CONCAT('%', #{SEARCH_ALL}, '%')
				)
		   	</if>
        	
			<if test="SEARCH_EMP_NAME != null and SEARCH_EMP_NAME != '' ">
			    AND (
			    	LOWER(E.EMP_NAME) LIKE CONCAT('%', #{SEARCH_EMP_NAME}, '%')
			    )
			</if>
			
			<if test="SEARCH_DUTY_CD != null and SEARCH_DUTY_CD != '' ">
		    	AND C.COMM_NM LIKE CONCAT('%',#{SEARCH_DUTY_CD},'%')
		    </if>
	    </where>
	</select>
	
	<!-- <select id="getDiseasesByEmpHealth" parameterType="map" resultType="map">
		SELECT 
			EMP_DISEASES_ID,
			EMP_HEALTH_ID,
			DISEASE,
			START_DATE,
			END_DATE,
			NOTE
    	FROM HSE_EMP_DISEASES 
    	WHERE EMP_HEALTH_ID = #{EMP_HEALTH_ID}
	</select>
	
	<insert id="insertDisease" parameterType="map">
		INSERT INTO HSE_EMP_DISEASES
		(
		    EMP_HEALTH_ID,
		    DISEASE,
		    START_DATE,
		    END_DATE,
		    NOTE
		)
		VALUES
		(
		    #{EMP_HEALTH_ID},
		    #{DISEASE},
		    #{START_DATE},
		    #{END_DATE},
		    #{NOTE}
		)
	</insert>
	
	<update id="updateDisease" parameterType="map">
		UPDATE HSE_EMP_DISEASES
		SET DISEASE = #{DISEASE},
		  	START_DATE = #{START_DATE},
		  	END_DATE = #{END_DATE},
		    NOTE = #{NOTE}
		WHERE EMP_DISEASES_ID = #{EMP_DISEASES_ID}
	</update>
	
	<delete id="deleteDisease" parameterType="map">
		DELETE
		FROM HSE_EMP_DISEASES
		WHERE EMP_DISEASES_ID = #{EMP_DISEASES_ID}
	</delete>
	
	<delete id="deleteDiseaseByHealthId" parameterType="map">
		DELETE
		FROM HSE_EMP_DISEASES
		WHERE EMP_HEALTH_ID = #{EMP_HEALTH_ID}
	</delete> -->
	
	<!-- POPUP -->
	<select id="duplicateCheckEmpNo" parameterType="map" resultType="HashMap">
		SELECT COUNT(*) AS CNT
		FROM HSE_EMP_HEALTH
		WHERE EMP_NO = #{EMP_NO}
	</select>
	<!-- //POPUP -->
	
		<!-- file -->
	<insert id="insertHealthFile" parameterType="map" useGeneratedKeys="true" keyProperty="EMP_HEALTH_FILE_ID">
		INSERT INTO HSE_EMP_HEALTH_FILE
		(
		    EMP_HEALTH_ID,
		    FILE_TYPE,
		    FILE_ID,
		    INS_DATE,
		    INS_USER
		)
		VALUES
		(
		    #{EMP_HEALTH_ID},
		    #{FILE_TYPE},
		    #{FILE_ID},
		    CURRENT_TIMESTAMP(),
		    #{REGI_EMP_HEALTH_ID}
		)
	</insert>
	
	<select id="getFile" parameterType="map" resultType="HashMap">
		SELECT 
			HEHF.EMP_HEALTH_FILE_ID,
			HEHF.EMP_HEALTH_ID,
			HEHF.FILE_TYPE,
			HEHF.FILE_ID,
			DATE_FORMAT(CONVERT_TZ
				(HEHF.INS_DATE, @@session.time_zone,#{session.CLIENT_TIMEZONE_OFFSET}), '%Y.%m.%d') 
					AS INS_DATE,
			HEHF.INS_USER,
			HEHF.UPD_DATE,
			HEHF.UPD_USER,
			TF.ATCH_FLE_SEQ,
			TF.FLE_TP,
			TF.FLE_PATH,
			TF.FLE_NM,
			TF.NEW_FLE_NM,
			TF.FLE_SZ,
			TF.DESCRPT
		FROM HSE_EMP_HEALTH_FILE HEHF
		INNER JOIN TCCO_FILE TF ON HEHF.FILE_ID = TF.ATCH_FLE_SEQ
		WHERE 
			HEHF.EMP_HEALTH_ID = #{EMP_HEALTH_ID}
			AND HEHF.FILE_TYPE = #{FILE_TYPE}
	</select>
	
	<delete id="deleteHealthFile" parameterType="map">
		DELETE
		FROM HSE_EMP_HEALTH_FILE
		WHERE EMP_HEALTH_ID = #{EMP_HEALTH_ID}
	</delete>
	
	<delete id="deleteHealthFileWithId" parameterType="map">
		DELETE
		FROM HSE_EMP_HEALTH_FILE
		WHERE FILE_ID = #{FILE_ID}
	</delete>
	<!-- //file -->
</mapper>