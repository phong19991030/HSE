/*==============================================================
* Generated by somangLee on 2022-01-17
==============================================================*/
$(document).ready(function(){		

  // Start motion
  setTimeout(function(){
    $('body').addClass('login-start');
  }, 500);

  $('.datepicker').datepicker();
  $('.calendar-picker').click(function() {
     $(this).find(".datepicker").datepicker('show');
  });
  
  // tab2
  $('ul.tab2 li').click(function(){
    var tab = $(this).attr('tab');
    if(!$(this).hasClass('current')) {
      // class 삭제
      $(this).siblings('li').removeClass('current');
      $(this).parents('ul.tab2').siblings('div.tab-content.current').removeClass('current');
      // class 추가 
      $(this).addClass('current');
      $(this).parents('ul.tab2').siblings('div[tab='  + tab + ']').addClass('current');
    }
  });
});



//exits
//select-box custom
function initialControl() {
  $(".info-select").on('change', function() {
    var select_name = $(this).children('option:selected').text();
    $(this).siblings('label').text(select_name);
  });
  if ($(".info-select").length > 0) {
    $(".info-select").each(function() {
      if ($(this).find("option").length > 0) {
        var select_name = $(this).children('option:selected').text();
        $(this).siblings('label').text(select_name);
      }
    });
  }

  //focus style
  $('.select-box select').focus(function() {
    $(this).parent().addClass('focus');
  });
  $('.select-box select').focusout(function() {
    $(this).parent().removeClass('focus');
  });
  $('.input-group input').focus(function() {
    $(this).parent().addClass('focus');
  });
  $('.input-group input').focusout(function() {
    $(this).parent().removeClass('focus');
  });
  
  $('input[type="number"]').keyup(function(e){
	  var key = e.which || e.keyCode;
//	  alert('111111')
	  if(e.key == "Process" || key == 69){
	        e.preventDefault();
//	        $(this).val($(this).val().slice(0, -1));
	        this.value = this.value.slice(0, this.value.length-1);
//	        $(this).inputWarning(rules["number"].msg[lang]);
	  }else{
	      $(this).resetWarning();
	  }
	  
	  // @JK
	  if(this.maxLength > -1) this.value = this.value.slice(0, this.maxLength);
  });
  
  $('input[type="number"]').each(function(i, obj){
	 if(!$(obj).attr('placeholder')){
		 $(obj).prop('placeholder','You only can type number.');
	 } 
  });
  $('input[type="text"]').each(function(i, obj){
	 if(!$(obj).attr('maxlength')){
		 $(obj).prop('maxlength','50');
	 } 
	 if(!$(obj).attr('placeholder')){
		 $(obj).prop('placeholder','You can type up to '+ $(obj).attr('maxlength')+ ' characters.');
	 } 
  });
  $('textarea').each(function(i, obj){
	  if(!$(obj).attr('maxlength')){
			 $(obj).prop('maxlength','500');
		 }
	  if(!$(obj).attr('placeholder')){
			 $(obj).prop('placeholder','You can type up to '+ $(obj).attr('maxlength')+ ' characters.');
		 } 
  });
  
	$('input, select, textarea').each(function(i, obj){
		if($(obj).attr('nova-validation')){
			if($(obj).attr('readonly') || $(obj).attr('readonly') == 'readonly'){
				$(obj).change(function(){
					$(obj).resetWarning();
				})
			}else{
				$(obj).keydown(function(){
					$(obj).resetWarning();
				})
			}
		}
	});
	
	// @JK input 자동완성 off
	$('input').attr('autocomplete', 'off');
}

// doan 20220315
function formatBytes(bytes, decimals = 2) {
    if (bytes === 0) return '0 Bytes';

    const k = 1024;
    const dm = decimals < 0 ? 0 : decimals;
    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];

    const i = Math.floor(Math.log(bytes) / Math.log(k));

    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
}

function genIdx(data, rn){
	var cnt = data.CNT;
	var lst = data.LIST;
	var pageSize = parseInt(data.PAGE_SIZE);
	var page = parseInt(data.PAGE);
	var num = parseInt(rn) - 1;
	
	var idx = cnt - num;
//	var idx = cnt - (num) - ((page -1)*pageSize);
	return idx
}

function setLocalObject(key,param){
  // Put the object into storage
  localStorage.setItem(key, JSON.stringify(param));
}

function retrieveLocalObject(key){
  var retrievedObject = localStorage.getItem(key);
  var param = JSON.parse(retrievedObject);
  return param;
}

function castEmptyData(data){
	if(!data || data == ""){
		return "_"
	}
	return data
}

function  convertArrStr(str, regex='@!#%'){
	var res = "_";
	if(str){
		var arrOfStr = str.split(regex);
		res = arrOfStr[0];
		if(arrOfStr.length > 1){
			var more = arrOfStr.length - 1;
			res = res + " 외 " + more + "인";
		}
	}
	
	return res;
}

//var param = {};
//user_list = _sys.mariaDB.getData(CTX + '/common/getEmpListWithParam.ajax', param);

/*function empListIdtoListName(listId){
  if(!listId || listId == ""){
		return "_";
	}
  var result ='';
  var idEmpArr = listId.split(',');
  if(idEmpArr.length==1){
    var user = user_list.find(user => user.EMP_NO == idEmpArr[0]);
    return user.EMP_NAME;
  }

  if(idEmpArr.length>1){
    var user = user_list.find(user => user.EMP_NO == idEmpArr[0]);
    result += user.EMP_NAME;
    var empCnt = 0;
    for (let i=1; i < idEmpArr.length; i++) {
      var user = user_list.find(user => user.EMP_NO == idEmpArr[i]);
      if (!user==false) empCnt++;  
    }
    result += " 외"+ "  " + empCnt + "인";
  }
  return result;
}*/