<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sys_new.sys0500">

	<select id="getCompanyList" parameterType="map" resultType="HashMap">
		SELECT SUB.*
		FROM (
		    SELECT C.COMPANY_ID
		         , C.COMPANY_NM
		         , C.CLS
		         , DATE_FORMAT(CONVERT_TZ(C.INS_DT, @@session.time_zone,  #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%dT%T') AS INS_DATETIME
		         , F.ATCH_FLE_SEQ
		         , F.FLE_PATH
		         , F.NEW_FLE_NM
		         , IFNULL(U.USER_CNT, 0) AS USER_CNT
		         , ROW_NUMBER() OVER (ORDER BY C.INS_DT DESC) AS RN
		    FROM WT_COMPANY C
		    LEFT JOIN TCCO_FILE F
		        ON F.ATCH_FLE_SEQ = C.LOGO
		    LEFT JOIN (
		        SELECT U.COMP AS COMPANY_ID
		             , COUNT(*) AS USER_CNT
		        FROM TSST_USER U
		        GROUP BY U.COMP
		    ) U
		        ON U.COMPANY_ID = C.COMPANY_ID
		    <where>
		    	<if test="SEARCH_ALL != null and SEARCH_ALL != '' ">
		    		AND C.COMPANY_NM LIKE CONCAT('%',#{SEARCH_ALL},'%')
		    	</if>
		    	<if test="SEARCH_COMPANY_NM != null and SEARCH_COMPANY_NM != '' ">
			    	AND C.COMPANY_NM LIKE CONCAT('%',#{SEARCH_COMPANY_NM},'%')
			    </if>
			    <if test="SEARCH_CLS != null and SEARCH_CLS != '' ">
		    		AND C.CLS = #{SEARCH_CLS}
		    	</if>
		    </where>
		) SUB
		WHERE SUB.RN BETWEEN (#{PAGE}-1) * #{PAGE_SIZE}+1 and (#{PAGE} * #{PAGE_SIZE})
		ORDER BY SUB.RN ASC
	</select>
	
	<select id="getCompanyCnt" parameterType="map" resultType="HashMap">
		SELECT COUNT(*) AS CNT
		FROM WT_COMPANY C
		<where>
	    	<if test="SEARCH_ALL != null and SEARCH_ALL != '' ">
	    		AND C.COMPANY_NM LIKE CONCAT('%',#{SEARCH_ALL},'%')
	    	</if>
	    	<if test="SEARCH_COMPANY_NM != null and SEARCH_COMPANY_NM != '' ">
		    	AND C.COMPANY_NM LIKE CONCAT('%',#{SEARCH_COMPANY_NM},'%')
		    </if>
		    <if test="SEARCH_CLS != null and SEARCH_CLS != '' ">
	    		AND C.CLS = #{SEARCH_CLS}
	    	</if>
	    </where>
	</select>
	
	
	
	
	<!-- POPUP -->
	<!-- <select id="duplicateCheckUserID" parameterType="map" resultType="HashMap">
		SELECT COUNT(*) AS CNT
		FROM TSST_USER
		WHERE USER_ID = #{USER_ID}
		수정 일 경우, USER_UID를 같이 던져 이전 ID는 중복체크 제외 
		<if test="USER_UID != null and USER_UID != '' ">
			AND USER_UID != #{USER_UID}
		</if>
	</select> -->
	<!-- //POPUP -->
	
	<!-- 등록 & 수정 -->
	<insert id="insertCompany" parameterType="map">
		BEGIN NOT ATOMIC
		DECLARE result VARCHAR(50);
		CALL proc_gen_id('COMPANY_SEQ', @result);
		
		<selectKey keyProperty="COMPANY_ID" resultType="String" order="AFTER">
		    SELECT @result;
		</selectKey>
		
		<!-- TCCO_FILE -->
		INSERT INTO TCCO_FILE
		(
		    FLE_KEY,
		    ATCH_FLE_SEQ,
		    FLE_TP,
		    FLE_PATH,
		    FLE_NM,
		    NEW_FLE_NM,
		    FLE_SZ,
		    INS_ID,
		    INS_DT
		)
		VALUES
		(
		    'company_logo',
		    #{LOGO.ATCH_FLE_SEQ},
		    #{LOGO.EXTENSION},
		    #{LOGO.LAST_PATH},
		    #{LOGO.ORIGINAL_NAME},
		    #{LOGO.UNIQUE_NAME},
		    #{LOGO.SIZE},
		    #{session.USER_UID},
		    CURRENT_TIMESTAMP()
		);
		
		<!-- WT_COMPANY -->
		INSERT INTO WT_COMPANY
		(
		    COMPANY_ID,
		    COMPANY_NM,
		    COMPANY_ADR,
		    DESCRPT,
		    LOGO,
		    CLS,
		    INS_USER,
		    INS_DT
		)
		VALUES
		(
		    @result,
		    #{COMPANY_NM},
		    #{COMPANY_ADR},
		    #{DESCRPT},
		    #{LOGO.ATCH_FLE_SEQ},
		    #{CLS},
		    #{session.USER_UID},
		    CURRENT_TIMESTAMP()
		);
		END;
	</insert>
	
	<update id="updateCompany" parameterType="map">
		UPDATE WT_COMPANY C, TCCO_FILE F
		SET C.COMPANY_NM = #{COMPANY_NM}
		  , C.COMPANY_ADR = #{COMPANY_ADR}
		  , C.DESCRPT = #{DESCRPT}
		  , C.CLS = #{CLS}
		  , C.INS_USER = #{session.USER_UID}
		  , C.INS_DT = CURRENT_TIMESTAMP()
		  , C.LOGO = #{LOGO.ATCH_FLE_SEQ}
		  , F.FLE_KEY = 'company_logo'
		  , F.ATCH_FLE_SEQ = #{LOGO.ATCH_FLE_SEQ}
		  , F.FLE_TP = #{LOGO.EXTENSION}
		  , F.FLE_PATH = #{LOGO.LAST_PATH}
		  , F.FLE_NM = #{LOGO.ORIGINAL_NAME}
		  , F.NEW_FLE_NM = #{LOGO.UNIQUE_NAME}
		  , F.FLE_SZ = #{LOGO.SIZE}
		  , F.INS_ID = #{session.USER_UID}
		  , F.INS_DT = CURRENT_TIMESTAMP()
		WHERE C.COMPANY_ID = #{COMPANY_ID}
		AND C.LOGO = F.ATCH_FLE_SEQ
	</update>
	
	<delete id="deleteCompany" parameterType="map">
		BEGIN NOT ATOMIC
		
		<!-- WT_COMPANY -->
		DELETE
		FROM WT_COMPANY
		WHERE COMPANY_ID = #{COMPANY_ID};
		
		<!-- TCCO_FILE -->
		DELETE
		FROM TCCO_FILE
		WHERE ATCH_FLE_SEQ = #{ATCH_FLE_SEQ};
		
		END;
	</delete>
	
	<!-- //등록 & 수정 -->
	
	<!-- 상세 -->
	<select id="getCompanyInfo" parameterType="map" resultType="HashMap">
		SELECT C.COMPANY_ID
		     , C.COMPANY_NM
		     , C.CLS
		     , C.COMPANY_ADR AS ADDRESS
     		 , C.DESCRPT AS DESCRIPTION
		     , C.INS_USER AS INS_USER_UID
		     , U.USER_ID AS INS_USER_ID
		     , DATE_FORMAT(CONVERT_TZ(C.INS_DT, @@session.time_zone,  #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%dT%T') AS INS_DT
		     , F.ATCH_FLE_SEQ
		     , F.FLE_PATH
		     , F.NEW_FLE_NM
		FROM WT_COMPANY C
		LEFT JOIN TSST_USER U
		    ON U.USER_UID = C.INS_USER
		LEFT JOIN TCCO_FILE F
		    ON F.ATCH_FLE_SEQ = C.LOGO
		WHERE C.COMPANY_ID = #{COMPANY_ID}
	</select>
	<!-- // 상세 -->
	
</mapper>