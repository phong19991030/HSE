<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sft.sft_0002">

	<select id="getListCnt" parameterType="map" resultType="HashMap">
		SELECT COUNT(*) AS CNT
		FROM HSE_TOOL_GRANT_REVOKE htgr
       	LEFT JOIN HSE_PROJECT_MGT hpm ON hpm.PROJECT_ID = htgr.PROJECT_ID
       	LEFT JOIN HSE_EMP_MGT hem1 ON hem1.EMP_NO = htgr.REGISTER_USER 
       	LEFT JOIN HSE_EMP_MGT hem2 ON hem2.EMP_NO = htgr.APPROVE_USER 
		<where>
			1 = 1
			<if test="all != null and all != '' ">
				AND ( 
				UPPER(hpm.PROJECT_NAME) LIKE CONCAT('%', UPPER(#{all}), '%') OR 
				UPPER(hem1.EMP_NAME) LIKE CONCAT('%', UPPER(#{all}), '%') OR 
				UPPER(hem2.EMP_NAME) LIKE CONCAT('%', UPPER(#{all}), '%') 
				)
			</if>
			<if test="PROJECT_ID != null and PROJECT_ID != '' ">
				AND htgr.PROJECT_ID = #{PROJECT_ID}
			</if>
			<if test="REGISTER_USER != null and REGISTER_USER != '' ">
				AND htgr.REGISTER_USER = #{REGISTER_USER}
			</if>
			<if test="GRANT_DATE != null and GRANT_DATE != '' ">
					AND htgr.GRANT_DATE = #{GRANT_DATE}
				</if>
		</where> 
	</select>

	<resultMap id="resultMapToolGrantRevokeList" type = "map">
		<result property="RN" column="RN" />
		<result property="TOOL_GRANT_REVOKE_ID" column="TOOL_GRANT_REVOKE_ID" />
		<result property="PROJECT_ID" column="PROJECT_ID" />
		<result property="PROJECT_NAME" column="PROJECT_NAME" />
		<result property="GRANT_DATE" column="GRANT_DATE" />
		<result property="EXPECT_REVOKE_DATE" column="EXPECT_REVOKE_DATE" />
		<result property="REVOKE_DATE" column="REVOKE_DATE" />
		<result property="REGISTER_USER_NO" column="REGISTER_USER_NO" />
		<result property="REGISTER_USER_NAME" column="REGISTER_USER_NAME" />
		<result property="APPROVE_USER_NO" column="APPROVE_USER_NO" />
		<result property="APPROVE_USER_NAME" column="APPROVE_USER_NAME" />
		<result property="INS_DATE" column="INS_DATE" />
		<result property="INS_USER" column="INS_USER" />
		
		<collection property="gramtItem" javaType="ArrayList" ofType="map">
			<result property="GRANT_LIST_ID" column="GRANT_LIST_ID"/>
			<result property="TOOL_ID" column="TOOL_ID"/>	
			<result property="TOOL_NAME" column="TOOL_NAME"/>		
			<result property="AMOUNT" column="AMOUNT" />
			<result property="NOTE" column="NOTE" />
    	</collection>
	</resultMap>
	<select id="getToolGrantRevokeList" parameterType="map" resultType="HashMap">
		SELECT SUB.*
		FROM (
			SELECT 
				ROW_NUMBER() OVER (ORDER BY INS_DATE DESC) AS RN,
				htgr.TOOL_GRANT_REVOKE_ID,
				htgr.PROJECT_ID,
				hpm.PROJECT_NAME,
				DATE_FORMAT(CONVERT_TZ(htgr.GRANT_DATE, @@session.time_zone,  #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%d') as GRANT_DATE,
				DATE_FORMAT(CONVERT_TZ(htgr.EXPECT_REVOKE_DATE, @@session.time_zone,  #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%d') as EXPECT_REVOKE_DATE,
				DATE_FORMAT(CONVERT_TZ(htgr.REVOKE_DATE, @@session.time_zone,  #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%d') as REVOKE_DATE,
				htgr.REGISTER_USER AS REGISTER_USER_NO,
				hem1.EMP_NAME AS REGISTER_USER_NAME,
				htgr.APPROVE_USER AS APPROVE_USER_NO,
				hem2.EMP_NAME AS APPROVE_USER_NAME,
				htgr.INS_DATE,
				htgr.INS_USER,
				htgr.UPD_DATE,
				<!-- hgl.GRANT_LIST_ID, -->
				<!-- hgl.GRANT_REVOKE_ID, -->
				<!-- hgl.TOOL_ID, -->
				<!-- hdtm.TOOL_NAME, -->
				<!-- hgl.AMOUNT, -->
				<!-- hgl.NOTE -->
				htgr.UPD_USER
	        FROM HSE_TOOL_GRANT_REVOKE htgr
	        LEFT JOIN HSE_PROJECT_MGT hpm ON hpm.PROJECT_ID = htgr.PROJECT_ID
	        LEFT JOIN HSE_EMP_MGT hem1 ON hem1.EMP_NO = htgr.REGISTER_USER 
	        LEFT JOIN HSE_EMP_MGT hem2 ON hem2.EMP_NO = htgr.APPROVE_USER 
	        <!-- LEFT JOIN HSE_GRANT_LIST hgl ON hgl.GRANT_REVOKE_ID = htgr.TOOL_GRANT_REVOKE_ID
	        LEFT JOIN HSE_DEVICE_TOOL_MGT hdtm ON hdtm.TOOL_ID = hgl.TOOL_ID -->
			<where>
				<if test="all != null and all != '' ">
					AND ( 
					UPPER(hpm.PROJECT_NAME) LIKE CONCAT('%', UPPER(#{all}), '%') OR 
					UPPER(hem1.EMP_NAME) LIKE CONCAT('%', UPPER(#{all}), '%') OR 
					UPPER(hem2.EMP_NAME) LIKE CONCAT('%', UPPER(#{all}), '%')
					)
				</if>
				<if test="PROJECT_ID != null and PROJECT_ID != '' ">
					AND htgr.PROJECT_ID = #{PROJECT_ID}
				</if>
				<if test="REGISTER_USER != null and REGISTER_USER != '' ">
					AND htgr.REGISTER_USER = #{REGISTER_USER}
				</if>
				<if test="GRANT_DATE != null and GRANT_DATE != '' ">
					AND htgr.GRANT_DATE = #{GRANT_DATE}
				</if>
			</where> 
		) SUB
		WHERE SUB.RN BETWEEN (#{PAGE}-1) * #{PAGE_SIZE}+1 and (#{PAGE} * #{PAGE_SIZE})
		ORDER BY SUB.RN ASC
		
	</select>
	
	<select id="getToolGrantRevokeDetail" parameterType="map" resultType="HashMap">
		SELECT 
		htgr.TOOL_GRANT_REVOKE_ID,
		htgr.PROJECT_ID,
		hpm.PROJECT_NAME,
		DATE_FORMAT(CONVERT_TZ(htgr.GRANT_DATE, @@session.time_zone,  #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%d') as GRANT_DATE,
		DATE_FORMAT(CONVERT_TZ(htgr.EXPECT_REVOKE_DATE, @@session.time_zone,  #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%d') as EXPECT_REVOKE_DATE,
		DATE_FORMAT(CONVERT_TZ(htgr.REVOKE_DATE, @@session.time_zone,  #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%d') as REVOKE_DATE,
		htgr.REGISTER_USER AS REGISTER_USER_NO,
		hem1.EMP_NAME AS REGISTER_USER_NAME,
		htgr.APPROVE_USER AS APPROVE_USER_NO,
		hem2.EMP_NAME AS APPROVE_USER_NAME,
		htgr.INS_DATE,
		htgr.INS_USER,
		htgr.UPD_DATE,
		htgr.UPD_USER
        FROM HSE_TOOL_GRANT_REVOKE htgr 
        INNER JOIN HSE_PROJECT_MGT hpm ON hpm.PROJECT_ID = htgr.PROJECT_ID
        INNER JOIN HSE_EMP_MGT hem1 ON hem1.EMP_NO = htgr.REGISTER_USER 
        INNER JOIN HSE_EMP_MGT hem2 ON hem2.EMP_NO = htgr.APPROVE_USER 
        WHERE htgr.TOOL_GRANT_REVOKE_ID = #{TOOL_GRANT_REVOKE_ID};
	</select>
	
	<select id="getToolGrantByGrantId" parameterType="map" resultType="HashMap">
		SELECT 
		hgl.*,
		hdtm.TOOL_NAME
        FROM HSE_GRANT_LIST hgl 
        INNER JOIN HSE_DEVICE_TOOL_MGT hdtm ON hdtm.TOOL_ID = hgl.TOOL_ID
        WHERE hgl.GRANT_REVOKE_ID = #{TOOL_GRANT_REVOKE_ID};
	</select>
	
	<insert id="insertToolGrantRevoke" parameterType="map" useGeneratedKeys="true" keyProperty="TOOL_GRANT_REVOKE_ID">
		INSERT INTO HSE_TOOL_GRANT_REVOKE
		(
		    PROJECT_ID,
		    GRANT_DATE,
		    EXPECT_REVOKE_DATE,
		    <if test="RETURN_YN != null and RETURN_YN != '' ">
				REVOKE_DATE,
			</if>
		    REGISTER_USER,
		    APPROVE_USER,
		    INS_DATE,
		    INS_USER
		)
		VALUES
		(
		    #{PROJECT_ID},
		    #{GRANT_DATE},
		    #{EXPECT_REVOKE_DATE},
		    <if test="RETURN_YN != null and RETURN_YN != '' ">
				CURRENT_TIMESTAMP(),
			</if>
		    #{REGISTER_USER},
		    #{APPROVE_USER},
		    CURRENT_TIMESTAMP(),
		    #{REGI_EMP_NO}
		)
	</insert>
	
	<update id="updateToolGrantRevoke" parameterType="map">
		UPDATE HSE_TOOL_GRANT_REVOKE
		SET 
		    TOOL_GRANT_REVOKE_ID = #{TOOL_GRANT_REVOKE_ID},
		    PROJECT_ID = #{PROJECT_ID},
		    GRANT_DATE = #{GRANT_DATE},
		    EXPECT_REVOKE_DATE = #{EXPECT_REVOKE_DATE},
		    <if test="RETURN_YN != null and RETURN_YN != '' ">
				REVOKE_DATE = CURRENT_TIMESTAMP(),
			</if>
			<if test="RETURN_YN == null or RETURN_YN == '' ">
				REVOKE_DATE = null,
			</if>
		    REGISTER_USER = #{REGISTER_USER},
		    APPROVE_USER = #{APPROVE_USER},
		    INS_DATE = #{INS_DATE},
		    INS_USER = #{INS_USER},
		    UPD_DATE = CURRENT_TIMESTAMP(),
		    UPD_USER = #{UPD_USER}
		    
		WHERE TOOL_GRANT_REVOKE_ID = #{TOOL_GRANT_REVOKE_ID}
	</update>
	
	<delete id="deleteToolGrantRevoke" parameterType="map">
		DELETE
		FROM HSE_TOOL_GRANT_REVOKE
		WHERE TOOL_GRANT_REVOKE_ID = #{TOOL_GRANT_REVOKE_ID}
	</delete>
	
	<insert id="insertToolGrantList1" parameterType="java.util.List">
        INSERT INTO HSE_GRANT_LIST (
        GRANT_LIST_ID,
        GRANT_REVOKE_ID,
        TOOL_ID,
        AMOUNT,
        NOTE
        )
        VALUES
        <foreach collection="list" item="element" index="index" open="(" separator="),("  close=")">
            #{element.GRANT_LIST_ID},
            #{element.GRANT_REVOKE_ID},
            #{element.TOOL_ID},
            #{element.AMOUNT},
            #{element.NOTE}
       </foreach>
    </insert>
    
    <insert id="insertToolGrantList" parameterType="map" useGeneratedKeys="true" keyProperty="GRANT_LIST_ID">
        INSERT INTO HSE_GRANT_LIST (
        GRANT_REVOKE_ID,
        TOOL_ID,
        AMOUNT,
        NOTE
        )
        VALUES(
        	#{GRANT_REVOKE_ID},
            #{TOOL_ID},
            #{AMOUNT},
            #{NOTE}
        )
            
    </insert>

	<update id="updateToolGrantList"  parameterType="java.util.List">  
	    <foreach collection="list" item="item" index="index" open="" close="" separator=";">
	        UPDATE HSE_GRANT_LIST
	        <set>
	        	GRANT_REVOKE_ID = ${GRANT_REVOKE_ID},
		        TOOL_ID = ${TOOL_ID},
		        AMOUNT = ${AMOUNT},
		        NOTE = ${NOTE}
	        </set>
	        WHERE GRANT_LIST_ID = ${item.GRANT_LIST_ID}
	    </foreach>      
	</update>

	<delete id="deleteToolGrantList" parameterType="map">
		DELETE
		FROM HSE_GRANT_LIST
		WHERE GRANT_REVOKE_ID = #{TOOL_GRANT_REVOKE_ID}
	</delete>
</mapper>