<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Fri Jul 24 09:44:25 
	ICT 2020 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="safety.safety_0200">
	<select id="getProjectList" parameterType="map" resultType="HashMap">
	SELECT
		HPM.PROJECT_NAME,
		HPM.PROJECT_ID
		FROM HSE_PROJECT_MGT HPM
	</select>
	<select id="getUserList" parameterType="map" resultType="HashMap">
	SELECT
		TUI.USER_UID,
		TUI.USER_NM
		FROM TSST_USER_INFO TUI
	</select>
	<select id="getSafeCourseById" parameterType="map"
		resultType="HashMap">
		SELECT
		T.SAFE_COURSE_ID,
		T.DOC_NO,
		T.PROJECT_ID,
		T.WORK_TYPE,
		DATE_FORMAT(CONVERT_TZ(T.COURSE_DATE, @@session.time_zone,
		#{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%d') AS COURSE_DATE,
		T.PLACE,
		T.TRAINER,
		T.CONTENT,
		DATE_FORMAT(CONVERT_TZ(T.INS_DATE, @@session.time_zone,
		#{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%dT%T') AS INS_DATE,
		T.INS_USER,
		DATE_FORMAT(CONVERT_TZ(T.UPD_DATE, @@session.time_zone,
		#{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%dT%T') AS UPD_DATE,
		T.UPD_USER,
		E.SAFE_COURSE_TRAINEE_ID,
		E.TRAINEE,
		HPM.PROJECT_NAME,
		ROW_NUMBER() OVER (ORDER BY T.INS_DATE DESC ) AS RN
		FROM
		HSE_SAFE_COURSE_MGT T
		INNER JOIN HSE_SAFE_COURES_TRAINEE E ON T.SAFE_COURSE_ID= E.SAFE_COURSE_ID
		LEFT JOIN HSE_PROJECT_MGT HPM ON T.PROJECT_ID = HPM.PROJECT_ID
		WHERE T.SAFE_COURSE_ID=#{SAFE_COURSE_ID}
		
	</select>

	<update id="updateSafeCourse" parameterType="map">
		BEGIN NOT ATOMIC
		
		UPDATE HSE_SAFE_COURSE_MGT SET 
		PROJECT_ID = #{PROJECT_ID},
		DOC_NO = #{DOC_NO},
		WORK_TYPE= #{WORK_TYPE},
		COURSE_DATE= #{COURSE_DATE},
		PLACE= #{PLACE},
		TRAINER =#{TRAINER},
		CONTENT=#{CONTENT},
		UPD_DATE=CURRENT_TIMESTAMP(),
		UPD_USER=''
		WHERE SAFE_COURSE_ID=#{SAFE_COURSE_ID};
		
		UPDATE HSE_SAFE_COURES_TRAINEE SET 
		TRAINEE = #{TRAINEE}
		WHERE SAFE_COURSE_ID=#{SAFE_COURSE_ID};
		
		END;
	</update>

	<delete id="deleteSafeCourse" parameterType="map">
		BEGIN NOT ATOMIC
		
		DELETE
		FROM
		HSE_SAFE_COURES_TRAINEE
		WHERE SAFE_COURSE_ID =
		#{SAFE_COURSE_ID};
		
		DELETE
		FROM
		HSE_SAFE_COURSE_MGT
		WHERE SAFE_COURSE_ID = #{SAFE_COURSE_ID};
		
		END;
	
	</delete>

	<select id="getAll" parameterType="map" resultType="HashMap">
		SELECT SUB.*
		FROM (
			SELECT
			T.SAFE_COURSE_ID,
			T.DOC_NO,
			T.PROJECT_ID,
			T.WORK_TYPE,
			DATE_FORMAT(CONVERT_TZ(T.COURSE_DATE, @@session.time_zone,  #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%d') as COURSE_DATE,
			T.PLACE,
			T.TRAINER,
			hem.EMP_NAME as TRAINER_NAME,
			T.CONTENT,
			DATE_FORMAT(CONVERT_TZ(T.INS_DATE, @@session.time_zone, #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%dT%T') AS INS_DATE,
			T.INS_USER,
			DATE_FORMAT(CONVERT_TZ(T.UPD_DATE, @@session.time_zone, #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%dT%T') AS UPD_DATE,
			T.UPD_USER,
			E.SAFE_COURSE_TRAINEE_ID,
			E.TRAINEE,
			emp.EMP_NAME as FIRST_TRAINEE_NAME, 
			CHAR_LENGTH(E.TRAINEE) - CHAR_LENGTH( REPLACE ( E.TRAINEE, ',', '')) as CNT_TRAINEE_MORE,
			HPM.PROJECT_NAME,
			ROW_NUMBER() OVER (ORDER BY T.INS_DATE DESC ) AS RN
			FROM
			HSE_SAFE_COURSE_MGT T
			INNER JOIN HSE_SAFE_COURES_TRAINEE E ON T.SAFE_COURSE_ID= E.SAFE_COURSE_ID
			LEFT JOIN HSE_PROJECT_MGT HPM ON T.PROJECT_ID = HPM.PROJECT_ID
			LEFT JOIN HSE_EMP_MGT hem ON hem.EMP_NO = T.TRAINER
			LEFT JOIN HSE_EMP_MGT emp ON SUBSTRING_INDEX(E.TRAINEE,',',1) = emp.EMP_NO
			<where>
				<if test="all != null and all != '' ">
			    		AND (
						     LOWER(T.WORK_TYPE) LIKE LOWER(CONCAT('%', #{all}, '%')) 
						)
			    	</if>
				
				<if test="WORK_TYPE != null and WORK_TYPE != '' ">
					AND T.WORK_TYPE LIKE CONCAT('%',#{WORK_TYPE},'%')
				</if>
				<if test="SEARCH_FIRST_DT != null and SEARCH_FIRST_DT != '' ">
		    		AND T.COURSE_DATE &gt;= #{SEARCH_FIRST_DT}
		    	</if>
		    	<if test="SEARCH_LAST_DT != null and SEARCH_LAST_DT != '' ">
		    		AND T.COURSE_DATE &lt;= #{SEARCH_LAST_DT}
		    	</if>
		    	<if test="SEARCH_PAYMENT_STATUS != null and SEARCH_PAYMENT_STATUS != '' ">
		    		
		    	</if>
			</where>
		) SUB
		WHERE SUB.RN BETWEEN (#{PAGE}-1) * #{PAGE_SIZE}+1 and (#{PAGE} * #{PAGE_SIZE})
		ORDER BY SUB.RN ASC
	</select>
	
	<select id="getALlByCompanyId" resultType="HashMap" parameterType="map">
    	SELECT
			T.SAFE_COURSE_ID,
			T.DOC_NO,
			T.PROJECT_ID,
			T.WORK_TYPE,
			DATE_FORMAT(CONVERT_TZ(T.COURSE_DATE, @@session.time_zone,  #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%d') as COURSE_DATE,
			T.PLACE,
			T.TRAINER,
			hem.EMP_NAME as TRAINER_NAME,
			T.CONTENT,
			DATE_FORMAT(CONVERT_TZ(T.INS_DATE, @@session.time_zone, #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%dT%T') AS INS_DATE,
			T.INS_USER,
			DATE_FORMAT(CONVERT_TZ(T.UPD_DATE, @@session.time_zone, #{session.CLIENT_TIMEZONE_OFFSET}), '%Y-%m-%dT%T') AS UPD_DATE,
			T.UPD_USER,
			E.SAFE_COURSE_TRAINEE_ID,
			E.TRAINEE,
			emp.EMP_NAME as FIRST_TRAINEE_NAME, 
			CHAR_LENGTH(E.TRAINEE) - CHAR_LENGTH( REPLACE ( E.TRAINEE, ',', '')) as CNT_TRAINEE_MORE,
			HPM.PROJECT_NAME,
			ROW_NUMBER() OVER (ORDER BY T.INS_DATE DESC ) AS RN
		FROM
		HSE_SAFE_COURSE_MGT T
		INNER JOIN HSE_SAFE_COURES_TRAINEE E ON T.SAFE_COURSE_ID= E.SAFE_COURSE_ID
		LEFT JOIN HSE_PROJECT_MGT HPM ON T.PROJECT_ID = HPM.PROJECT_ID
		LEFT JOIN HSE_EMP_MGT hem ON hem.EMP_NO = T.TRAINER
		LEFT JOIN HSE_EMP_MGT emp ON SUBSTRING_INDEX(E.TRAINEE,',',1) = emp.EMP_NO
		LEFT JOIN HSE_COMPANY_MGT hcm ON HPM.COMPANY_ID = hcm.COMPANY_ID
		<where>
       		hcm.COMPANY_ID = #{COMPANY_ID}
       		<if test="SEARCH_YEAR != null and SEARCH_YEAR != '' and SEARCH_MONTH != null and SEARCH_MONTH != '' ">
	    		AND (
	    			(YEAR(T.COURSE_DATE) = #{SEARCH_YEAR} AND MONTH(T.COURSE_DATE) = #{SEARCH_MONTH})
	    		)
	    	</if>
		</where>
		
		
    </select>

	<insert id="insertSafeCourse" parameterType="map">
		<selectKey keyProperty="SAFE_COURSE_ID" resultType="string" order="AFTER">
			SELECT @itemId
		</selectKey>

		BEGIN NOT ATOMIC
		DECLARE itemId INT;

		INSERT INTO
		HSE_SAFE_COURSE_MGT
		(
		DOC_NO,
		PROJECT_ID,
		WORK_TYPE,
		COURSE_DATE,
		PLACE,
		TRAINER,
		CONTENT,
		INS_DATE,
		INS_USER,
		UPD_DATE,
		UPD_USER) VALUES (
		#{DOC_NO},
		#{PROJECT_ID},
		#{WORK_TYPE},
		#{COURSE_DATE},
		#{PLACE},
		#{TRAINER},
		#{CONTENT},
		CURRENT_TIMESTAMP(),
		#{INS_USER},
		CURRENT_TIMESTAMP(),
		#{INS_USER});

		SET
		@itemId = (SELECT MAX(SAFE_COURSE_ID) FROM HSE_SAFE_COURSE_MGT);

		INSERT INTO HSE_SAFE_COURES_TRAINEE
		(
		SAFE_COURSE_ID,
		TRAINEE
		) VALUES
		(@itemId , #{TRAINEE} );

		END;
	</insert>

	<select id="getSafeCourseCnt" parameterType="map"
		resultType="HashMap">
		SELECT COUNT(*) AS CNT
		FROM HSE_SAFE_COURSE_MGT T
			INNER JOIN HSE_SAFE_COURES_TRAINEE E ON T.SAFE_COURSE_ID= E.SAFE_COURSE_ID
			LEFT JOIN HSE_PROJECT_MGT HPM ON T.PROJECT_ID = HPM.PROJECT_ID
		<where>
				<if test="all != null and all != '' ">
			    		AND (
						     LOWER(T.WORK_TYPE) LIKE LOWER(CONCAT('%', #{all}, '%')) 
						)
			    	</if>
				
				<if test="WORK_TYPE != null and WORK_TYPE != '' ">
					AND T.WORK_TYPE LIKE CONCAT('%',#{WORK_TYPE},'%')
				</if>
				<if test="SEARCH_FIRST_DT != null and SEARCH_FIRST_DT != '' ">
		    		AND T.COURSE_DATE &gt;= #{SEARCH_FIRST_DT}
		    	</if>
		    	<if test="SEARCH_LAST_DT != null and SEARCH_LAST_DT != '' ">
		    		AND T.COURSE_DATE &lt;= #{SEARCH_LAST_DT}
		    	</if>
		    	<if test="SEARCH_PAYMENT_STATUS != null and SEARCH_PAYMENT_STATUS != '' ">
		    		
		    	</if>
			</where>
	</select>
</mapper>
