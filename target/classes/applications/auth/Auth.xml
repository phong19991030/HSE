<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="common.auth.Auth">

	
	<!-- Get detail user login for watch device -->
	<!-- 2020/16/11 - add - quangnv -->
	<select id="getUserDetailForWatch" parameterType="map" resultType="HashMap">
		SELECT * FROM TSST_USER_INFO
		WHERE USER_ID = #{USER_ID}
	</select>

	<!-- 로그인시 세션에 들어가게될 항목 -->
	<!-- 2018/12/05 - modified - anhpv - left join empl -->
	<!-- <select id="getUser" parameterType="map" resultType="HashMap">
		SELECT 
			USER_UID USER_UID,
	    	USER_ID USER_ID,
	    	USER_NM USER_NM,
	    	PWD, 
			EMAIL,
			USE_FRM_DT, USE_TO_DT, INS_ID, 
			INS_DT, UPT_ID, UPT_DT, 
			EMP_NO,
			AVA_EMP,
			IS_FIRST_LOGIN,
			SALT
			DEPT_CD, DEPT_NM, PST_CD, PST_NM
		FROM TSST_USER
			(SELECT A1.USER_UID, A1.USER_ID, 
            	DECODE(A3.NAME_KR,NULL,DECODE(A3.NAME_EN,NULL,DECODE(A3.NAME_CH,NULL,A1.USER_ID,A3.NAME_CH),A3.NAME_EN),A3.NAME_KR) USER_NM, A1.PWD, A3.EMAIL,
				A1.USE_FRM_DT, A1.USE_TO_DT, A1.INS_ID, A1.INS_DT, A1.UPT_ID,
				A1.UPT_DT, A1.EMP_NO, A3.AVA_EMP, IS_FIRST_LOGIN,A5.DEPT_NM,A5.DEPT_CD, A7.PST_CD, A7.PST_NM 
				FROM TSST_USER A1
				LEFT JOIN TCDS_EMP_MST A3 ON (A1.EMP_NO=A3.EMP_NO AND USE_YN='Y')
				INNER JOIN TCDS_PST_CD A7 ON A3.PST_DUTY = A7.PST_CD
				LEFT JOIN TCDS_EMP_DEPT A4 ON A3.EMP_NO=A4.EMP_NO
                LEFT JOIN TCDS_DEPT_STRU A5 ON A4.DEPT_CD=A5.DEPT_CD
                LEFT JOIN TCDS_STRU_MGT A6 ON A5.STRU_ID=A6.STRU_ID
				LEFT OUTER JOIN TSST_USER_INFO A2
				ON A1.USER_UID = A2.USER_ID WHERE A6.CRT_YN='Y') A
		LEFT JOIN TSST_USER_INFO
			
		WHERE USER_ID = #{USER_ID}
		AND PWD = #{USER_PW}
	</select> -->
	
	<!-- @JK 추가 - 수정 -->
	<select id="getUser" parameterType="map" resultType="HashMap">
		SELECT U.USER_UID
		     , U.USER_ID
		     , U.COMP
		     , U.PWD
			 , U.USE_FRM_DT
		     , U.USE_TO_DT
		     , U.INS_ID
		     , U.INS_DT
		     , U.UPT_ID
		     , U.UPT_DT
		     
		     , U.IS_FIRST_LOGIN
		     , U.SALT
		     , DATE_FORMAT(U.UPT_DT, '%Y-%m-%dT%T') AS LAST_UPDATE_DATETIME
		     
		     , UI.USER_NM
		     <!-- , UI.EMAIL -->
		
		     , UR.ROLE_ID_LIST
		     , UR.ROLE_NM_LIST
		     
		     <!-- , C.COMPANY_ID
		     , C.COMPANY_NM
		     , C.CLS AS COMPANY_CLS -->
		FROM TSST_USER U
		LEFT JOIN TSST_USER_INFO UI
		    ON UI.USER_UID = U.USER_UID
		LEFT JOIN (
		    SELECT UR.USER_ID AS USER_UID
		         , GROUP_CONCAT(UR.ROLE_ID SEPARATOR ' | ') AS ROLE_ID_LIST
		         , GROUP_CONCAT(URM.ROLE_NM SEPARATOR ' | ') AS ROLE_NM_LIST
		    FROM TSST_USER_ROLE UR
		    LEFT JOIN TSST_ROLE_MGT URM
		        ON URM.ROLE_ID = UR.ROLE_ID
		    GROUP BY UR.USER_ID
		) UR
		    ON UR.USER_UID = U.USER_UID
		<!-- LEFT JOIN WT_COMPANY C
    		ON C.COMPANY_ID = U.COMP -->
		WHERE U.USER_ID = #{USER_ID}
		AND U.PWD = #{USER_PW}
	</select>
	
	<!-- @JK 추가 - 로그인 및 사용자 생성 패스워드 salt 조회 --> 
	<select id="getUserSalt" parameterType="map" resultType="HashMap">
		SELECT USER_ID
			 , SALT
		FROM TSST_USER
		WHERE USER_ID = #{USER_ID}
	</select>
	
	<!-- @JK 추가 - 비밀번호 변경 --> 
	<update id="changePassword" parameterType="map">
		UPDATE TSST_USER
		SET PWD = #{PASSWORD}
		  , SALT = #{SALT}
		  , UPT_DT = CURRENT_TIMESTAMP()
		  , IS_FIRST_LOGIN = 0
		WHERE USER_UID = #{USER_UID}
	</update>
	
	<select id="getUseYN" parameterType="map" resultType="String">
		SELECT
			M.USE_YN USE_YN
		  FROM TSST_USER U
		  LEFT JOIN TCDS_EMP_MST M
		    ON U.EMP_NO = M.EMP_NO
		 WHERE USER_ID = #{USER_ID}
	</select>
	
	<select id="getUsersso" parameterType="map" resultType="HashMap">
		SELECT 
			USER_UID USER_UID,
	    	USER_ID USER_ID,
	    	USER_NM USER_NM,
	    	PWD, 
			EMAIL,
			USE_FRM_DT, USE_TO_DT, INS_ID, 
			INS_DT, UPT_ID, UPT_DT, 
			EMP_NO,
			AVA_EMP,
			IS_FIRST_LOGIN,
			DEPT_CD, DEPT_NM, PST_CD, PST_NM 
		FROM 
			(SELECT A1.USER_UID, A1.USER_ID, 
            	DECODE(A3.NAME_KR,NULL,DECODE(A3.NAME_EN,NULL,DECODE(A3.NAME_CH,NULL,A1.USER_ID,A3.NAME_CH),A3.NAME_EN),A3.NAME_KR) USER_NM, A1.PWD, A3.EMAIL,
				A1.USE_FRM_DT, A1.USE_TO_DT, A1.INS_ID, A1.INS_DT, A1.UPT_ID,
				A1.UPT_DT, A1.EMP_NO, A3.AVA_EMP, IS_FIRST_LOGIN,A5.DEPT_NM,A5.DEPT_CD, A7.PST_CD, A7.PST_NM 
				FROM TSST_USER A1
				LEFT JOIN TCDS_EMP_MST A3 ON (A1.EMP_NO=A3.EMP_NO AND USE_YN='Y')
				INNER JOIN TCDS_PST_CD A7 ON A3.PST_DUTY = A7.PST_CD
				LEFT JOIN TCDS_EMP_DEPT A4 ON A3.EMP_NO=A4.EMP_NO
                LEFT JOIN TCDS_DEPT_STRU A5 ON A4.DEPT_CD=A5.DEPT_CD
                LEFT JOIN TCDS_STRU_MGT A6 ON A5.STRU_ID=A6.STRU_ID
				LEFT OUTER JOIN TSST_USER_INFO A2
				ON A1.USER_UID = A2.USER_ID WHERE A6.CRT_YN='Y') A
		WHERE USER_ID = #{USER_ID}
	</select>
	
	
	<select id="getUserMaster" parameterType="map" resultType="HashMap">
		SELECT 
			USER_UID,
	    	USER_ID USER_ID,
	    	USER_NM USER_NM,
	    	PWD, 
			EMAIL,
			USE_FRM_DT, USE_TO_DT, INS_ID, 
			INS_DT, UPT_ID, UPT_DT, 
			EMP_NO,
			AVA_EMP
		FROM 
			(SELECT A1.USER_UID, A1.USER_ID, A2.USER_NM, A1.PWD, A3.EMAIL,
				A1.USE_FRM_DT, A1.USE_TO_DT, A1.INS_ID, A1.INS_DT, A1.UPT_ID,
				A1.UPT_DT, A1.EMP_NO, A3.AVA_EMP
				FROM TSST_USER A1
				INNER JOIN TCDS_EMP_MST A3 ON A1.EMP_NO=A3.EMP_NO
				LEFT OUTER JOIN TSST_USER_INFO A2
				ON A1.USER_UID = A2.USER_ID) A
		WHERE USER_ID = #{USER_ID}
	</select>
	
	<!-- 권한있는메뉴(전체) -->
	
	<select id="getListMenu" parameterType="map" resultType="HashMap">
	   
   
    SELECT
	    MENU_GRP,
	    MENU_ID,
	    MENU_NM,
	    MENU_OUT_YN,
	    LEV,
	    UP_MENU_ID,
	    <!-- PGM_ID,
	    PGM_NM, -->
	    LINK_PATH,
	    CLS_CD,
	    PARAM,
	    ORD_NO,
	    READ_YN,
	    WRT_YN,
	    MOD_YN,
	    DEL_YN,
	    PNT_YN,
	    EXC_DN_YN,
	    MNG_YN
	FROM
	    (
	        SELECT
	            SUBSTR(MENU_ID,0,11) AS MENU_GRP,
	            MENU_ID,
	            MENU_NM,
	            MENU_OUT_YN,
	            LEV,
	            UP_MENU_ID,
	            <!-- PGM_ID,
	            PGM_NM, -->
	            LINK_PATH,
	            PARAM,
	            ORD_NO,
	            RNUM,
	            READ_YN,
	            WRT_YN,
	            MOD_YN,
	            DEL_YN,
	            PNT_YN,
	            EXC_DN_YN,
	            CLS_CD,
	            MNG_YN
	        FROM
	            (
	                SELECT
	                    A.MENU_ID,
	                    A.MENU_NM AS MENU_NM,
	                    A.MENU_OUT_YN,
	                    A.LEV,
	                    A.UP_MENU_ID,
	                    <!-- A.PGM_ID,
	                    B.PGM_NM, -->
	                    LINK_PATH,
	                    A.PARAM,
	                    A.ORD_NO,
	                    CASE AC.MENU_ID
						WHEN  NULL THEN 0
	                    ELSE 1 END ROLE_CNT,
	                    AC.READ_YN,
	                    AC.WRT_YN,
	                    AC.MOD_YN,
	                    AC.DEL_YN,
	                    AC.PNT_YN,
	                    AC.EXC_DN_YN,
	                    AC.MNG_YN,
	                    SUBSTR(MENU_ID,3,3) CLS_CD,
	                   @rownum := @rownum + 1  AS RNUM
	                FROM
	                    TSST_MENU_MGT A
	                    <!-- LEFT OUTER JOIN TSST_PGM_MGT B ON A.PGM_ID = B.PGM_ID -->
	                    LEFT OUTER JOIN (
	                        SELECT
	                            USER_ID,
	                            MENU_ID,
	                            CASE
	                                    WHEN SUM(READ_YN) > 0  THEN 'Y'
	                                    ELSE 'N'
	                                END
	                            READ_YN,
	                            CASE
	                                    WHEN SUM(WRT_YN) > 0 THEN 'Y'
	                                    ELSE 'N'
	                                END
	                            WRT_YN,
	                            CASE
	                                    WHEN SUM(MOD_YN) > 0  THEN 'Y'
	                                    ELSE 'N'
	                                END
	                            MOD_YN,
	                            CASE
	                                    WHEN SUM(DEL_YN) > 0  THEN 'Y'
	                                    ELSE 'N'
	                                END
	                            DEL_YN,
	                            CASE
	                                    WHEN SUM(PNT_YN) > 0  THEN 'Y'
	                                    ELSE 'N'
	                                END
	                            PNT_YN,
	                            CASE
	                                    WHEN SUM(EXC_DN_YN) > 0  THEN 'Y'
	                                    ELSE 'N'
	                                END
	                            EXC_DN_YN,
	                            CASE
	                                    WHEN SUM(MNG_YN) > 0 THEN 'Y'
	                                    ELSE 'N'
	                                END
	                            MNG_YN
	                        FROM
	                            (
	                                SELECT
	                                    MENU_ID,
	                                    A.USER_UID USER_ID,
	                                    B.ROLE_ID,
	                                    CASE READ_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END READ_YN,
	                                     CASE WRT_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END WRT_YN,
	                                     CASE MOD_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END MOD_YN,
	                                     CASE DEL_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END DEL_YN,
	                                     CASE PNT_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END PNT_YN,
	                                     CASE EXC_DN_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END EXC_DN_YN,
	                                     CASE MNG_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END MNG_YN
	                                FROM
	                                    TSST_USER A,
	                                    TSST_USER_ROLE B,
	                                    TSST_ROLE_PGM C
	                                WHERE
	                                    A.USER_UID = B.USER_ID
	                                    AND   B.ROLE_ID = C.ROLE_ID
	                                    AND   A.USER_UID =  #{USER_UID} 
                                        
	                                UNION ALL
	                                ( SELECT
	                                    MENU_ID,
	                                    USER_ID,
	                                    '' ROLE_ID,
	                                     CASE READ_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END READ_YN,
	                                     CASE WRT_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END WRT_YN,
	                                     CASE MOD_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END MOD_YN,
	                                     CASE DEL_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END DEL_YN,
	                                     CASE PNT_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END PNT_YN,
	                                     CASE EXC_DN_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END EXC_DN_YN,
	                                     CASE MNG_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END MNG_YN
	                                  FROM
	                                    TSST_USER_PGM D
	                                  WHERE
	                                    D.USER_ID = #{USER_UID} 
	                                )
	                            ) AS TEMP_3
	                        GROUP BY
	                            MENU_ID,
	                            USER_ID
	                    ) AC ON A.MENU_ID = AC.MENU_ID
	                            AND AC.USER_ID = #{USER_UID} ,
						(SELECT @rownum := 0) r
						
	                WHERE
	                    A.USE_YN = 'Y' AND LEV >= 1
	               
	            ) AS TEMP_2
	    ) AS TEMP_1
	WHERE
	    LEV <![CDATA[<]]> 7
	ORDER BY
	    RNUM
    </select>
 
<!-- 	<select id="getListMenu" parameterType="map" resultType="HashMap"> -->
<!--         SELECT MENU_GRP, MENU_ID, MENU_NM, LEV, UP_MENU_ID, PGM_ID,  -->
<!--                PGM_NM, LINK_PATH2 LINK_PATH,CLS_CD, PARAM, ORD_NO, ROLE_CNT, -->
<!--                READ_YN,WRT_YN,MOD_YN,DEL_YN,PNT_YN,EXC_DN_YN,MNG_YN -->
<!--         FROM -->
<!--         (SELECT SUBSTR(MENU_ID,0,11) AS MENU_GRP, MENU_ID, MENU_NM, LEV, UP_MENU_ID, PGM_ID,  -->
<!--                PGM_NM, LINK_PATH2, PARAM, ORD_NO, RNUM,READ_YN,WRT_YN,MOD_YN,DEL_YN,PNT_YN,EXC_DN_YN,CLS_CD,MNG_YN, -->
<!--                CASE WHEN LEV = 1 THEN -->
<!--                     SUM(ROLE_CNT) OVER (PARTITION BY SUBSTR(MENU_ID,0,5)) -->
<!--                   WHEN LEV = 2 THEN -->
<!--                     SUM(ROLE_CNT) OVER (PARTITION BY SUBSTR(MENU_ID,0,8)) -->
<!--                   WHEN LEV = 3 THEN -->
<!--                     SUM(ROLE_CNT) OVER (PARTITION BY SUBSTR(MENU_ID,0,11)) -->
<!--                   WHEN LEV = 4 THEN -->
<!--                     SUM(ROLE_CNT) OVER (PARTITION BY SUBSTR(MENU_ID,0,14)) -->
<!--                   WHEN LEV = 5 THEN -->
<!--                     SUM(ROLE_CNT) OVER (PARTITION BY SUBSTR(MENU_ID,0,17)) -->
<!--                   END AS ROLE_CNT    -->
<!--         FROM -->
<!--         (SELECT A.MENU_ID, A.MENU_NM, A.LEV, A.UP_MENU_ID, A.PGM_ID,  -->
<!--                B.PGM_NM, B.LINK_PATH2, A.PARAM, A.ORD_NO, -->
<!--                DECODE(AC.PGM_ID, NULL, 0, 1) AS ROLE_CNT, -->
<!--                AC.READ_YN, -->
<!--                AC.WRT_YN, -->
<!--                AC.MOD_YN, -->
<!--                AC.DEL_YN, -->
<!--                AC.PNT_YN, -->
<!--                AC.EXC_DN_YN, -->
<!--                AC.MNG_YN, -->
<!--                SUBSTR(MENU_ID,3,3) CLS_CD, -->
<!--                ROWNUM AS RNUM -->
<!--         FROM TSST_MENU_MGT A LEFT OUTER JOIN TSST_PGM_MGT B -->
<!--         ON A.PGM_ID = B.PGM_ID -->
<!--         LEFT OUTER JOIN (	  -->
<!-- select  -->
<!-- USER_ID,PGM_ID,  -->
<!-- case when sum(READ_YN) >0 then 'Y' else 'N' end READ_YN , -->
<!-- case when sum(WRT_YN) >0 then 'Y' else 'N' end WRT_YN, -->
<!-- case when sum(MOD_YN) >0 then 'Y' else 'N' end MOD_YN, -->
<!-- case when sum(DEL_YN) >0 then 'Y' else 'N' end DEL_YN, -->
<!-- case when sum(PNT_YN) >0 then 'Y' else 'N' end PNT_YN, -->
<!-- case when sum(EXC_DN_YN) >0 then 'Y' else 'N' end EXC_DN_YN, -->
<!-- case when sum(MNG_YN) >0 then 'Y' else 'N' end MNG_YN -->
<!-- from ( -->
<!-- select  PGM_ID, A.USER_UID USER_ID , B.ROLE_ID, -->
<!--   DECODE (READ_YN,'Y',1,'N',0,'D',0)    READ_YN ,  -->
<!--   DECODE (WRT_YN,'Y',1,'N',0,'D',0)    WRT_YN , -->
<!--   DECODE (MOD_YN,'Y',1,'N',0,'D',0)    MOD_YN , -->
<!--   DECODE (DEL_YN,'Y',1,'N',0,'D',0)    DEL_YN , -->
<!--   DECODE (PNT_YN,'Y',1,'N',0,'D',0)    PNT_YN , -->
<!--   DECODE (EXC_DN_YN,'Y',1,'N',0,'D',0)    EXC_DN_YN , -->
<!--   DECODE (MNG_YN,'Y',1,'N',0,'D',0)    MNG_YN    -->
<!--  from TSST_USER A, TSST_USER_ROLE B, TSST_ROLE_PGM C -->
<!-- where A.USER_UID = B.USER_ID AND B.ROLE_ID = C.ROLE_ID -->
<!-- AND A.USER_UID = #{USER_UID}  -->
<!-- UNION ALL  -->
<!-- (select  -->
<!-- PGM_ID, USER_ID ,'' ROLE_ID, -->
<!--   DECODE (READ_YN,'Y',1,'N',0,'D',0)    READ_YN ,  -->
<!--   DECODE (WRT_YN,'Y',1,'N',0,'D',0)    WRT_YN , -->
<!--   DECODE (MOD_YN,'Y',1,'N',0,'D',0)    MOD_YN , -->
<!--   DECODE (DEL_YN,'Y',1,'N',0,'D',0)    DEL_YN , -->
<!--   DECODE (PNT_YN,'Y',1,'N',0,'D',0)    PNT_YN , -->
<!--   DECODE (EXC_DN_YN,'Y',1,'N',0,'D',0)    EXC_DN_YN , -->
<!--   DECODE (MNG_YN,'Y',1,'N',0,'D',0)    MNG_YN    -->
<!-- FROM TSST_USER_PGM D  -->
<!-- where -->
<!-- D.USER_ID = #{USER_UID}  -->
<!-- ) -->
<!-- ) group by PGM_ID, USER_ID) AC -->
<!--         ON A.PGM_ID = AC.PGM_ID AND AC.USER_ID =  #{USER_UID} -->
<!--         WHERE  A.USE_YN = 'Y' -->
<!--         CONNECT BY PRIOR A.MENU_ID = A.UP_MENU_ID  -->
<!--         START WITH  LEV=1  ORDER SIBLINGS BY A.ORD_NO)) -->
<!--         WHERE  LEV <![CDATA[<]]> 7 AND ROLE_CNT > 0  -->
<!--         ORDER BY RNUM -->
<!-- 	</select> -->
	
	<!-- 권한있는메뉴(전체) -->
	<!-- <select id="getListMenuLang" parameterType="map" resultType="HashMap">
       SELECT
		    MENU_GRP, MENU_ID, MENU_NM, MENU_OUT_YN, LEV, UP_MENU_ID,
		    SUBSTRING_INDEX(SUBSTRING_INDEX(LINK_PATH, '/', 3), '/', -1) PGM_ID,
			LINK_PATH,CLS_CD, PARAM, ORD_NO, 
			READ_YN,WRT_YN,MOD_YN,DEL_YN,PNT_YN,EXC_DN_YN,MNG_YN
		FROM
		    (
		        SELECT
		            SUBSTR(MENU_ID,0,11) AS MENU_GRP,
		            MENU_ID, MENU_NM, MENU_OUT_YN, LEV, UP_MENU_ID, LINK_PATH, PARAM, ORD_NO, 
					READ_YN,WRT_YN,MOD_YN,DEL_YN,PNT_YN,EXC_DN_YN,CLS_CD,MNG_YN
		        FROM
		            (
		                SELECT
		                    A.MENU_ID,
		                    <choose>
				           		<when test="LANG_CODE != null and LANG_CODE.equals('en')">
						           A.MENU_NM_ENG AS MENU_NM, 		
				           		</when>
				           		<otherwise>
				           			A.MENU_NM AS MENU_NM,
				           		</otherwise>
				           </choose>
				           A.MENU_OUT_YN,
		                    A.LEV,
		                    A.UP_MENU_ID,
		                    A.LINK_PATH,
		                    A.PARAM,
		                    A.ORD_NO,
 						CASE AC.MENU_ID
						WHEN  NULL THEN 0
	                    ELSE 1 END ROLE_CNT,		                    AC.READ_YN,
		                    AC.WRT_YN,
		                    AC.MOD_YN,
		                    AC.DEL_YN,
		                    AC.PNT_YN,
		                    AC.EXC_DN_YN,
		                    AC.MNG_YN,
		                    SUBSTR(A.MENU_ID,3,3) CLS_CD
	                   
		                FROM
		                    TSST_MENU_MGT A
		                    LEFT OUTER JOIN (
		                        SELECT
		                            TEMP_3.USER_ID,
		                            TEMP_3.MENU_ID,
		                            CASE WHEN SUM(READ_YN) >0 THEN 'Y' ELSE 'N' END READ_YN ,
									CASE WHEN SUM(WRT_YN) >0 THEN 'Y' ELSE 'N' END WRT_YN,
									CASE WHEN SUM(MOD_YN) >0 THEN 'Y' ELSE 'N' END MOD_YN,
									CASE WHEN SUM(DEL_YN) >0 THEN 'Y' ELSE 'N' END DEL_YN,
									CASE WHEN SUM(PNT_YN) >0 THEN 'Y' ELSE 'N' END PNT_YN,
									CASE WHEN SUM(EXC_DN_YN) >0 THEN 'Y' ELSE 'N' END EXC_DN_YN,
									CASE WHEN SUM(MNG_YN) >0 THEN 'Y' ELSE 'N' END MNG_YN
		                        FROM
		                            (
		                                SELECT
		                                    C.MENU_ID,
		                                    A.USER_UID USER_ID,
		                                    B.ROLE_ID,
		                                     CASE READ_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END READ_YN,
	                                     CASE WRT_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END WRT_YN,
	                                     CASE MOD_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END MOD_YN,
	                                     CASE DEL_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END DEL_YN,
	                                     CASE PNT_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END PNT_YN,
	                                     CASE EXC_DN_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END EXC_DN_YN,
	                                     CASE MNG_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END MNG_YN
		                                FROM
		                                    TSST_USER A,
		                                    TSST_USER_ROLE B,
		                                    TSST_ROLE_PGM C
		                                WHERE
		                                    A.USER_UID = B.USER_ID
		                                    AND   B.ROLE_ID = C.ROLE_ID
		                                    AND   A.USER_UID = #{USER_UID} 
		                                UNION ALL
		                                ( SELECT
		                                    MENU_ID,
		                                    USER_ID,
		                                    '' ROLE_ID,
		                                     CASE READ_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END READ_YN,
	                                     CASE WRT_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END WRT_YN,
	                                     CASE MOD_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END MOD_YN,
	                                     CASE DEL_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END DEL_YN,
	                                     CASE PNT_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END PNT_YN,
	                                     CASE EXC_DN_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END EXC_DN_YN,
	                                     CASE MNG_YN
										WHEN 'Y' THEN 1
										WHEN 'N' THEN 0
	                                    ELSE 0 END MNG_YN
		                                  FROM
		                                    TSST_USER_PGM D
		                                  WHERE
		                                    D.USER_ID = #{USER_UID} 
		                                )
		                            ) AS TEMP_3
		                        GROUP BY
		                            TEMP_3.MENU_ID,
		                            TEMP_3.USER_ID
		                    ) AC ON A.MENU_ID = AC.MENU_ID
		                            AND AC.USER_ID = #{USER_UID} 
		                WHERE
		                    A.USE_YN = 'Y' AND LEV >= 1
		            
		            ) AS TEMP_2
		    ) AS TEMP_1
		WHERE  LEV <![CDATA[<]]> 7 
		ORDER BY LEV, ORD_NO
	</select> -->
	
	<!-- @JK 수정 - 불필요 쿼리 제거, 가독성 향상 -->
	<select id="getListMenuLang" parameterType="map" resultType="HashMap">
		SELECT MENU_ID
		     , MENU_NM
		     , MENU_OUT_YN
		     , LEV
		     , UP_MENU_ID
		     , SUBSTRING_INDEX(SUBSTRING_INDEX(LINK_PATH, '/', 3), '/', -1) AS PGM_ID
		     , LINK_PATH
		     , CLS_CD
		     , PARAM
		     , ORD_NO
		
		     , READ_YN
		     , WRT_YN
		     , MOD_YN
		     , DEL_YN
		     , PNT_YN
		     , EXC_DN_YN
		     , MNG_YN
		FROM (
		    SELECT A.MENU_ID
		         <choose>
		            <when test="LANG_CODE != null and LANG_CODE.equals('en')">
		         		, A.MENU_NM_ENG AS MENU_NM
		            </when>
		            <otherwise>
		         		, A.MENU_NM AS MENU_NM
		            </otherwise>
		         </choose>
		         , A.MENU_OUT_YN
		         , A.LEV
		         , A.UP_MENU_ID
		         , A.LINK_PATH
		         , A.PARAM
		         , A.ORD_NO
		         <!-- , CASE AC.MENU_ID WHEN NULL THEN 0 ELSE 1 END AS ROLE_CNT -->
		         , IF(AC.MENU_ID IS NULL, 0, 1) AS ROLE_CNT
		         , AC.READ_YN
		         , AC.WRT_YN
		         , AC.MOD_YN
		         , AC.DEL_YN
		         , AC.PNT_YN
		         , AC.EXC_DN_YN
		         , AC.MNG_YN
		         , SUBSTR(A.MENU_ID,3,3) AS CLS_CD
		    FROM TSST_MENU_MGT A
		    LEFT OUTER JOIN (
		        SELECT TEMP_3.USER_UID
		             , TEMP_3.MENU_ID
		             , CASE WHEN SUM(READ_YN) > 0 THEN 'Y' ELSE 'N' END AS READ_YN
		             , CASE WHEN SUM(WRT_YN) > 0 THEN 'Y' ELSE 'N' END AS WRT_YN
		             , CASE WHEN SUM(MOD_YN) > 0 THEN 'Y' ELSE 'N' END AS MOD_YN
		             , CASE WHEN SUM(DEL_YN) > 0 THEN 'Y' ELSE 'N' END AS DEL_YN
		             , CASE WHEN SUM(PNT_YN) > 0 THEN 'Y' ELSE 'N' END AS PNT_YN
		             , CASE WHEN SUM(EXC_DN_YN) > 0 THEN 'Y' ELSE 'N' END AS EXC_DN_YN
		             , CASE WHEN SUM(MNG_YN) > 0 THEN 'Y' ELSE 'N' END AS MNG_YN
		        FROM (
		            SELECT C.MENU_ID
		                 , A.USER_UID
		                 , B.ROLE_ID
		                 , CASE READ_YN   WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS READ_YN
		                 , CASE WRT_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS WRT_YN
		                 , CASE MOD_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS MOD_YN
		                 , CASE DEL_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS DEL_YN
		                 , CASE PNT_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS PNT_YN
		                 , CASE EXC_DN_YN WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS EXC_DN_YN
		                 , CASE MNG_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS MNG_YN
		            FROM TSST_USER A, TSST_USER_ROLE B, TSST_ROLE_PGM C
		            WHERE A.USER_UID = B.USER_ID
		                AND B.ROLE_ID = C.ROLE_ID
		                AND A.USER_UID = #{USER_UID}
		            <!-- 현재 TSST_USER_PGM 사용 안함, 목적도 모르겠음 -->
		            UNION ALL
		            SELECT MENU_ID
		                 , USER_ID
		                 , '' AS ROLE_ID
		                 , CASE READ_YN   WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS READ_YN
		                 , CASE WRT_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS WRT_YN
		                 , CASE MOD_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS MOD_YN
		                 , CASE DEL_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS DEL_YN
		                 , CASE PNT_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS PNT_YN
		                 , CASE EXC_DN_YN WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS EXC_DN_YN
		                 , CASE MNG_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS MNG_YN
		            FROM TSST_USER_PGM D
		            WHERE D.USER_ID = #{USER_UID}
		        ) TEMP_3 <!-- # 현재 유저가 권한을 가지고 메뉴들 TSST_USER_PGM과 UNION ALL -->
		        GROUP BY TEMP_3.MENU_ID, TEMP_3.USER_UID
		    ) AC <!-- # TEMP_3 에서 합친 결과를 GROUP BY 하여 각 권한들을 SUM 하여 0보다 클 경우 => Y, 0일 경우 => N 처리 -->
		        ON A.MENU_ID = AC.MENU_ID
		        AND AC.USER_UID = #{USER_UID}
		    WHERE A.USE_YN = 'Y'
		      AND LEV &gt;= 1
		) TEMP_1
		WHERE  LEV &lt; 7
		ORDER BY LEV, ORD_NO
	</select>
	
	<!-- <select id="getMenuRole" parameterType="map" resultType="HashMap">
  	SELECT  USER_ID, MENU_ID,  
	CASE WHEN SUM(READ_YN) >0 THEN 'Y' ELSE 'N' END READ_YN , 
	CASE WHEN SUM(WRT_YN) >0 THEN 'Y' ELSE 'N' END WRT_YN, 
	CASE WHEN SUM(MOD_YN) >0 THEN 'Y' ELSE 'N' END MOD_YN, 
	CASE WHEN SUM(DEL_YN) >0 THEN 'Y' ELSE 'N' END DEL_YN, 
	CASE WHEN SUM(PNT_YN) >0 THEN 'Y' ELSE 'N' END PNT_YN,
	 CASE WHEN SUM(EXC_DN_YN) >0 THEN 'Y' ELSE 'N' END EXC_DN_YN, 
	 CASE WHEN SUM(MNG_YN) >0 THEN 'Y' ELSE 'N' END MNG_YN 
	 FROM ( SELECT  C.MENU_ID, A.USER_UID USER_ID , B.ROLE_ID,  
	 CASE READ_YN WHEN 'Y' THEN 1           WHEN 'N' THEN 0                                      ELSE 0 END READ_YN,                                       
	 CASE WRT_YN           WHEN 'Y' THEN 1           WHEN 'N' THEN 0                                      ELSE 0 END WRT_YN,                                       
	 CASE MOD_YN           WHEN 'Y' THEN 1           WHEN 'N' THEN 0                                      ELSE 0 END MOD_YN,                                       
	 CASE DEL_YN           WHEN 'Y' THEN 1           WHEN 'N' THEN 0                                      ELSE 0 END DEL_YN,                                       
	 CASE PNT_YN           WHEN 'Y' THEN 1           WHEN 'N' THEN 0                                      ELSE 0 END PNT_YN,                                       
	 CASE EXC_DN_YN           WHEN 'Y' THEN 1           WHEN 'N' THEN 0                                      ELSE 0 END EXC_DN_YN,                                       
	 CASE MNG_YN           WHEN 'Y' THEN 1           WHEN 'N' THEN 0                                      ELSE 0 END MNG_YN  
	 FROM TSST_USER A, TSST_USER_ROLE B, TSST_ROLE_PGM C WHERE A.USER_UID = B.USER_ID AND B.ROLE_ID = C.ROLE_ID 
	 AND A.USER_UID =  #{USER_UID} AND C.MENU_ID = #{MENU_ID}  UNION ALL  (SELECT  MENU_ID, USER_ID ,'' ROLE_ID, 
	 CASE READ_YN   WHEN 'Y' THEN 1           WHEN 'N' THEN 0                                      ELSE 0 END READ_YN,                                       
	 CASE WRT_YN           WHEN 'Y' THEN 1           WHEN 'N' THEN 0                                      ELSE 0 END WRT_YN,                                       
	 CASE MOD_YN           WHEN 'Y' THEN 1           WHEN 'N' THEN 0                                      ELSE 0 END MOD_YN,                                       
	 CASE DEL_YN           WHEN 'Y' THEN 1           WHEN 'N' THEN 0                                      ELSE 0 END DEL_YN,                                       
	 CASE PNT_YN           WHEN 'Y' THEN 1           WHEN 'N' THEN 0                                      ELSE 0 END PNT_YN,                                       
	 CASE EXC_DN_YN           WHEN 'Y' THEN 1           WHEN 'N' THEN 0                                      ELSE 0 END EXC_DN_YN,                                       
	 CASE MNG_YN           WHEN 'Y' THEN 1           WHEN 'N' THEN 0                                      ELSE 0 END MNG_YN 
	FROM TSST_USER_PGM D  WHERE D.USER_ID = #{USER_UID} AND D.MENU_ID = #{MENU_ID}  )
	 )  A
	GROUP BY MENU_ID, USER_ID
	</select> -->
	
	<!-- @JK 수정 - 불필요 쿼리 제거, 가독성 향상 -->
	<select id="getMenuRole" parameterType="map" resultType="HashMap">
		SELECT USER_ID
		     , MENU_ID
		     , CASE WHEN SUM(READ_YN) > 0   THEN 'Y' ELSE 'N' END AS READ_YN
		     , CASE WHEN SUM(WRT_YN) > 0    THEN 'Y' ELSE 'N' END AS WRT_YN
		     , CASE WHEN SUM(MOD_YN) > 0    THEN 'Y' ELSE 'N' END AS MOD_YN
		     , CASE WHEN SUM(DEL_YN) > 0    THEN 'Y' ELSE 'N' END AS DEL_YN
		     , CASE WHEN SUM(PNT_YN) > 0    THEN 'Y' ELSE 'N' END AS PNT_YN
		     , CASE WHEN SUM(EXC_DN_YN) > 0 THEN 'Y' ELSE 'N' END AS EXC_DN_YN
		     , CASE WHEN SUM(MNG_YN) > 0    THEN 'Y' ELSE 'N' END AS MNG_YN
		FROM (
		    SELECT C.MENU_ID
		         , A.USER_UID AS USER_ID
		         , B.ROLE_ID
		         , CASE READ_YN   WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS READ_YN
		         , CASE WRT_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS WRT_YN
		         , CASE MOD_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS MOD_YN
		         , CASE DEL_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS DEL_YN
		         , CASE PNT_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS PNT_YN
		         , CASE EXC_DN_YN WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS EXC_DN_YN
		         , CASE MNG_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS MNG_YN
		    FROM TSST_USER A, TSST_USER_ROLE B, TSST_ROLE_PGM C
		    WHERE A.USER_UID = B.USER_ID
		        AND B.ROLE_ID = C.ROLE_ID
		        AND A.USER_UID = #{USER_UID}
		        AND C.MENU_ID = #{MENU_ID}
		    UNION ALL
		    SELECT MENU_ID
		         , USER_ID
		         , '' AS ROLE_ID
		         , CASE READ_YN   WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS READ_YN
		         , CASE WRT_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS WRT_YN
		         , CASE MOD_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS MOD_YN
		         , CASE DEL_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS DEL_YN
		         , CASE PNT_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS PNT_YN
		         , CASE EXC_DN_YN WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS EXC_DN_YN
		         , CASE MNG_YN    WHEN 'Y' THEN 1 WHEN 'N' THEN 0 ELSE 0 END AS MNG_YN
		    FROM TSST_USER_PGM D
		    WHERE D.USER_ID = #{USER_UID}
		        AND D.MENU_ID = #{MENU_ID}
		) A
		GROUP BY MENU_ID, USER_ID
	</select>
	
	<select id= "userRoleId" parameterType="map" resultType="String">
        select ROLE_ID from TSST_USER_ROLE
        where USER_ID = #{USER_ID}
	</select>
	
	
	<select id="loginFailCount" parameterType="map" resultType="HashMap"> 
		SELECT 
		IFNULL(LOGIN_FAIL_CNT,0) LOGIN_FAIL_CNT,USER_LOCKED_TIME
		FROM TSST_USER_LOGIN_INFO
		where USER_ID = #{USER_ID}
	</select>
	<insert id="insertLoginFail" parameterType="map">
		INSERT INTO TSST_USER_LOGIN_INFO (
		   USER_ID, LOGIN_FAIL_CNT, USER_LOCKED) 
		VALUES (
		 #{USER_ID, jdbcType=VARCHAR},
		  0,
		 'N'
		)
	</insert>
	<update id="updateLoginFail"  parameterType="map">
		UPDATE TSST_USER_LOGIN_INFO
		SET    USER_ID        = #{USER_ID, jdbcType=VARCHAR},
        LOGIN_FAIL_CNT = #{LOGIN_FAIL_CNT, jdbcType=VARCHAR},
        USER_LOCKED    = #{USER_LOCKED, jdbcType=VARCHAR},
        USER_LOCKED_TIME    = sysdate()
        WHERE USER_ID        = #{USER_ID, jdbcType=VARCHAR}
	</update>
	
	<select id="getUserEmpDeptInfo" parameterType="map" resultType="hashmap">
		SELECT NAME_KR, NAME_EN, NAME_CH, D.DEPT_CD, D.DEPT_NM, E.PST_CD, E.PST_NM, A.USER_ID, A.USER_UID, B.EMAIL, B.PHONE_NUM
		FROM TSST_USER A
		LEFT JOIN TCDS_EMP_MST B ON A.EMP_NO = B.EMP_NO
		LEFT JOIN TCDS_EMP_DEPT C ON B.EMP_NO = C.EMP_NO
		LEFT JOIN TCDS_DEPT_MGT D ON C.DEPT_CD = D.DEPT_CD
		LEFT JOIN TCDS_PST_CD E ON B.PST_DUTY = E.PST_CD
		WHERE USER_UID = #{USER_UID}
	</select>
	
	<insert id="updateRecentLogin" parameterType="map">
		BEGIN NOT ATOMIC
			DECLARE L_CNT INT;
			
			SELECT	COUNT(*)
			  INTO	L_CNT
			  FROM	TSST_USER_LOGIN_RECENT
			 WHERE	USER_UID	=	#{USER_UID};
			 
			 IF L_CNT = 0 THEN
			 
				 INSERT INTO TSST_USER_LOGIN_RECENT(USER_UID, LOGIN_DT) VALUES (#{USER_UID}, SYSDATE());
			 
			 ELSE 
			 	UPDATE TSST_USER_LOGIN_RECENT 
			 	SET LOGIN_DT = SYSDATE()
			 	WHERE USER_UID = #{USER_UID};
			 
			 END IF;
		END;
	</insert>
	
</mapper>